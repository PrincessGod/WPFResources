<Window x:Class="WpfApplication2.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Title="MainWindow" Height="800" Width="1300"
        
        xmlns:system="clr-namespace:System;assembly=mscorlib"       
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        TextElement.Foreground="{DynamicResource MaterialDesignBody}"
        TextElement.FontWeight="Regular"
        TextElement.FontSize="13"
        TextOptions.TextFormattingMode="Ideal" 
        TextOptions.TextRenderingMode="Auto"        
        Background="{DynamicResource MaterialDesignPaper}"
        FontFamily="{DynamicResource MaterialDesignFont}" Loaded="Window_Loaded" 
        ><!--Background="{DynamicResource MaterialDesignPaper}"-->
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Dark.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Defaults.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Primary/MaterialDesignColor.DeepPurple.xaml" />
                
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Accent/MaterialDesignColor.Lime.xaml" />

                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.PopupBox.xaml" />

                <!-- throw in some extra colour for our floating action button -->
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/MaterialDesignColor.Green.Named.Primary.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <Style TargetType="TextBlock" BasedOn="{StaticResource MaterialDesignCaptionTextBlock}" x:Key="Caption">
                <Setter Property="Opacity" Value=".68"></Setter>
            </Style>
            <!-- data template used for the dialogs example, defines a View for a ViewModel of type DateTime  -->
            <DataTemplate DataType="{x:Type system:DateTime}">
                <StackPanel Margin="16">
                    <TextBlock>England win the World Cup:</TextBlock>
                    <TextBlock Margin="0 8 0 0" Text="{Binding }" />
                    <TextBlock Margin="0 8 0 0" >You will never see that again.</TextBlock>
                    <Button  Margin="0 8 0 0" IsDefault="True" Command="{x:Static materialDesign:DialogHost.CloseDialogCommand}" Style="{DynamicResource MaterialDesignFlatButton}">AWESOME</Button>
                </StackPanel>
            </DataTemplate>
        </ResourceDictionary>
    </Window.Resources>
    <TabControl Padding="10" Background="{DynamicResource MaterialDesignPaper}">
        <TabItem Header="Button">
            <Grid Background="#00F0F8FF" >
                <StackPanel HorizontalAlignment="Stretch" Background="#00F0F8FF">
                    <materialDesign:ColorZone Padding="16" materialDesign:ShadowAssist.ShadowDepth="Depth5"
                                            Mode="PrimaryMid">
                        <DockPanel>
                            <ToggleButton Style="{StaticResource MaterialDesignHamburgerToggleButton}" IsChecked="False"
                                        x:Name="MenuToggleButton"/>
                            <materialDesign:PopupBox DockPanel.Dock="Right" PlacementMode="BottomAndAlignRightEdges" StaysOpen="False">
                                <StackPanel>
                                    <Button Content="Hello World" Click="MenuPopupButton_OnClick"/>
                                    <Button Content="Nice Popup" Click="MenuPopupButton_OnClick"/>
                                    <Button Content="Can't Touch This" IsEnabled="False" />
                                    <Separator/>
                                    <Button Content="Goodbye" Click="MenuPopupButton_OnClick"/>
                                </StackPanel>
                            </materialDesign:PopupBox>
                            <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="22">Material Design In XAML Toolkit</TextBlock>
                        </DockPanel>
                    </materialDesign:ColorZone>
                    <Grid >
                        <StackPanel Orientation="Horizontal" Margin="0 12 0 0">
                            <Button Style="{StaticResource MaterialDesignFloatingActionMiniLightButton}"
                        Margin="0 0 8 0" HorizontalAlignment="Left"
                        ToolTip="MaterialDesignFloatingActionMiniLightButton">
                                <materialDesign:PackIcon Kind="Alarm" Height="24" Width="24" />
                            </Button>
                            <Button Style="{StaticResource MaterialDesignFloatingActionMiniButton}"
                        Margin="0 0 8 0" HorizontalAlignment="Left"
                        ToolTip="MaterialDesignFloatingActionMiniButton">
                                <materialDesign:PackIcon Kind="Alarm" Height="24" Width="24" />
                            </Button>
                            <Button Style="{StaticResource MaterialDesignFloatingActionMiniDarkButton}"
                        Margin="0 0 8 0" HorizontalAlignment="Left"
                        ToolTip="MaterialDesignFloatingActionMiniDarkButton">
                                <materialDesign:PackIcon Kind="Alarm" Height="24" Width="24" />
                            </Button>
                            <Button Style="{StaticResource MaterialDesignFloatingActionMiniAccentButton}"
                        Margin="0 0 8 0" HorizontalAlignment="Left"
                        ToolTip="MaterialDesignFloatingActionMiniAccentButton">
                                <materialDesign:PackIcon Kind="Alarm" Height="24" Width="24" />
                            </Button>
                            <Button Style="{StaticResource MaterialDesignFloatingActionLightButton}"
                        Margin="0 0 8 0" HorizontalAlignment="Left"
                        ToolTip="MaterialDesignFloatingActionLightButton">
                                <materialDesign:PackIcon Kind="Alarm" Height="24" Width="24" />
                            </Button>
                            <Button Style="{StaticResource MaterialDesignFloatingActionButton}"
                        Margin="0 0 8 0" HorizontalAlignment="Left"
                        ToolTip="MaterialDesignFloatingActionButton">
                                <materialDesign:PackIcon Kind="Alarm" Height="24" Width="24" />
                            </Button>
                            <Button Style="{StaticResource MaterialDesignFloatingActionDarkButton}"
                        Margin="0 0 8 0" HorizontalAlignment="Left"
                        ToolTip="MaterialDesignFloatingActionDarkButton">
                                <materialDesign:PackIcon Kind="Alarm" Height="24" Width="24" />
                            </Button>
                            <Button Style="{StaticResource MaterialDesignFloatingActionAccentButton}"
                        Margin="0 0 8 0" HorizontalAlignment="Left"
                        ToolTip="MaterialDesignFloatingActionAccentButton">
                                <materialDesign:PackIcon Kind="Alarm" Height="24" Width="24" />
                            </Button>
                            <materialDesign:PopupBox Style="{StaticResource MaterialDesignMultiFloatingActionPopupBox}"
                                         PlacementMode="BottomAndAlignCentres"
                                         ToolTipService.Placement="Right"
                                         ToolTip="PopupBox, Style MaterialDesignMultiFloatingActionPopupBox"
                                         Opened="MenuPopupButton_OnClick"
                                         Closed="MenuPopupButton_OnClick">
                                <StackPanel>
                                    <Button ToolTip="One with custom opacity" Opacity="0.5">1</Button>
                                    <Button ToolTip="Two">2</Button>
                                    <Button ToolTip="Three">3</Button>
                                </StackPanel>
                            </materialDesign:PopupBox>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Bottom">
                            <materialDesign:PopupBox Margin="16,0,16,0" StaysOpen="True">
                                <Grid Width="300" Margin="8,8,8,8">
                                    <Grid.Resources>
                                        <Style TargetType="CheckBox" BasedOn="{StaticResource MaterialDesignCheckBox}">
                                            <Setter Property="Margin" Value="8,8,10,8"/>
                                        </Style>
                                        <Style TargetType="TextBox" BasedOn="{StaticResource MaterialDesignTextBox}">
                                            <Setter Property="materialDesign:HintAssist.IsFloating" Value="True"/>
                                            <Setter Property="Margin" Value="8,8,8,8"/>
                                        </Style>
                                    </Grid.Resources>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="*"/>
                                        <RowDefinition Height="*"/>
                                        <RowDefinition Height="*"/>
                                        <RowDefinition Height="*"/>
                                        <RowDefinition Height="*" />
                                    </Grid.RowDefinitions>
                                    <TextBlock Grid.Column="0" Grid.Row="0" Style="{StaticResource MaterialDesignTitleTextBlock}" Margin="8,8,8,16">OPTIONS</TextBlock>
                                    <TextBox Grid.Column="0" Grid.Row="1" materialDesign:HintAssist.Hint="Setting 1" Text="200"/>
                                    <TextBox Grid.Column="0" Grid.Row="2" materialDesign:HintAssist.Hint="Setting 2" Text="400"/>
                                    <TextBox Grid.Column="0" Grid.Row="3" materialDesign:HintAssist.Hint="Setting 3" Text="600"/>
                                    <CheckBox Grid.Column="1" Grid.Row="1" VerticalAlignment="Bottom" />
                                    <CheckBox Grid.Column="1" Grid.Row="2" IsChecked="True" VerticalAlignment="Bottom" />
                                    <CheckBox Grid.Column="1" Grid.Row="3" VerticalAlignment="Bottom" />
                                    <ComboBox Grid.Column="0" Grid.Row="4" materialDesign:HintAssist.Hint="Setting 4" materialDesign:HintAssist.IsFloating="True"
                                  MaxDropDownHeight="200"
                                  Margin="8 8 8 8">
                                        <ComboBoxItem>25%</ComboBoxItem>
                                        <ComboBoxItem>50%</ComboBoxItem>
                                        <ComboBoxItem>75%</ComboBoxItem>
                                        <ComboBoxItem>100%</ComboBoxItem>
                                        <ComboBoxItem>150%</ComboBoxItem>
                                        <ComboBoxItem>200%</ComboBoxItem>
                                        <ComboBoxItem>250%</ComboBoxItem>
                                        <ComboBoxItem>501%</ComboBoxItem>
                                    </ComboBox>
                                </Grid>

                            </materialDesign:PopupBox>

                            <materialDesign:PopupBox Style="{StaticResource MaterialDesignMultiFloatingActionAccentPopupBox}"
                                     PlacementMode="BottomAndAlignCentres"                                                                      
                                     
                                     ToggleCheckedContentCommandParameter="wowsers"
                                     Margin="0 0 48 0"
                                     ToolTip="PopupBox, Style MaterialDesignMultiFloatingActionAccentPopupBox">
                                <materialDesign:PopupBox.ToggleCheckedContent>
                                    <materialDesign:PackIcon Kind="Pencil" Width="24" Height="24" />
                                </materialDesign:PopupBox.ToggleCheckedContent>
                                <StackPanel>
                                    <Button ToolTip="One">1</Button>
                                    <Button ToolTip="Two" IsEnabled="False">2</Button>
                                    <Button ToolTip="Three">3</Button>
                                </StackPanel>
                            </materialDesign:PopupBox>
                        </StackPanel>
                    </Grid>
                    <StackPanel Grid.Row="2" Orientation="Horizontal" Margin="0 16 0 0">
                        <Button Style="{StaticResource MaterialDesignRaisedLightButton}" Margin="0 0 8 0" Width="100"
                    ToolTip="Resource name: MaterialDesignRaisedLightButton">
                            _LIGHT
                        </Button>
                        <Button Style="{StaticResource MaterialDesignRaisedButton}" Margin="0 0 8 0" Width="100"
                    ToolTip="Resource name: MaterialDesignRaisedButton">
                            _MID
                        </Button>
                        <Button Style="{StaticResource MaterialDesignRaisedDarkButton}" Margin="0 0 8 0" Width="100"
                    ToolTip="Resource name: MaterialDesignRaisedLightDarkButton">
                            _DARK
                        </Button>
                        <Button Style="{StaticResource MaterialDesignRaisedAccentButton}" Margin="0 0 8 0" Width="100"
                    ToolTip="Resource name: MaterialDesignRaisedAccentButton">
                            ACCENT
                        </Button>
                    </StackPanel>
                    <StackPanel Grid.Row="3"  Margin="0 24 0 0" Orientation="Horizontal">
                        <Button Style="{StaticResource MaterialDesignRaisedAccentButton}"
                    Margin="0 0 8 0"
                    Width="150"
                    ToolTip="Resource name: MaterialDesignRaisedAccentButton"
                    materialDesign:RippleAssist.Feedback="#DD000000">CUSTOM RIPPLE</Button>
                        <Button Style="{StaticResource MaterialDesignRaisedAccentButton}"
                    Margin="0 0 8 0"
                    Width="150"
                    ToolTip="Resource name: MaterialDesignRaisedAccentButton"
                    materialDesign:RippleAssist.IsDisabled="True">NO RIPPLE</Button>
                        <RepeatButton Margin="0 0 8 0" Width="100"
                          ToolTip="Resource name: MaterialDesignRaisedButton">
                            REPEAT
                        </RepeatButton>
                        <Button Style="{StaticResource MaterialDesignFlatButton}" Click="MenuPopupButton_OnClick" ToolTip="MaterialDesignFlatButton" Margin="200 0 0 0">ACCEPT</Button>
                        <Button Style="{StaticResource MaterialDesignFlatButton}" ToolTip="MaterialDesignFlatButton">CANCEL</Button>
                    </StackPanel>
                    <Border Margin="0 16 0 0" BorderThickness="0 1 0 0" BorderBrush="{DynamicResource MaterialDesignDivider}"/>
                    <TextBlock Margin="0 32 0 24" Grid.Row="4" Style="{StaticResource MaterialDesignHeadlineTextBlock}">Toggles</TextBlock>
                    <Grid Grid.Row="5">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="1*" />
                            <ColumnDefinition Width="1*" />
                        </Grid.ColumnDefinitions>
                        <StackPanel Grid.Row="0" Orientation="Horizontal">
                            <ToggleButton Content="C" Margin="0 0 8 8" Style="{StaticResource MaterialDesignActionLightToggleButton}" IsChecked="True"
                          ToolTip="MaterialDesignActionLightToggleButton"/>
                            <ToggleButton Content="H" Margin="0 0 8 8" Style="{StaticResource MaterialDesignActionToggleButton}"
                          ToolTip="MaterialDesignActionToggleButton"/>
                            <!-- checkbox style same as toggle button -->
                            <CheckBox Content="E" Margin="0 0 8 8" Style="{StaticResource MaterialDesignActionDarkCheckBox}"
                      ToolTip="MaterialDesignActionDarkCheckBox"/>
                            <ToggleButton Content="C" Margin="0 0 8 8" Style="{StaticResource MaterialDesignActionAccentToggleButton}"
                          IsChecked="True"
                          ToolTip="MaterialDesignActionAccentToggleButton"/>
                            <ToggleButton Content="K" Margin="0 0 8 8" Style="{StaticResource MaterialDesignActionToggleButton}" IsEnabled="False"
                          ToolTip="MaterialDesignActionToggleButton"/>
                            <ToggleButton Margin="0 0 8 8" Style="{StaticResource MaterialDesignActionToggleButton}"                          
                          ToolTip="MaterialDesignActionToggleButton">
                                <Image Source="Resources/ProfilePic.jpg"></Image>
                            </ToggleButton>
                            <TextBlock Margin="16 0 8 0" VerticalAlignment="Center">Customise On Content:</TextBlock>
                            <ToggleButton Style="{StaticResource MaterialDesignActionToggleButton}"
                          ToolTip="MaterialDesignActionLightToggleButton">
                                <ToggleButton.Content>
                                    <materialDesign:PackIcon Kind="EmoticonSad" />
                                </ToggleButton.Content>
                                <materialDesign:ToggleButtonAssist.OnContent>
                                    <materialDesign:PackIcon Kind="EmoticonHappy" />
                                </materialDesign:ToggleButtonAssist.OnContent>
                            </ToggleButton>
                        </StackPanel>
                        <StackPanel Grid.Row="1" Margin="0 16 0 0" Orientation="Horizontal">
                            <RadioButton Style="{StaticResource MaterialDesignRadioButton}" Margin="0 0 8 8" VerticalAlignment="Center" IsChecked="True">
                                Radio
                            </RadioButton>
                            <RadioButton Style="{StaticResource MaterialDesignRadioButton}" Margin="0 0 8 8" VerticalAlignment="Center">
                                Ga Ga
                            </RadioButton>
                            <RadioButton Style="{StaticResource MaterialDesignRadioButton}" Margin="0 0 8 8" VerticalAlignment="Center"
                         IsEnabled="False">
                                Disabled
                            </RadioButton>
                            <CheckBox Style="{StaticResource MaterialDesignCheckBox}" Margin="0 0 8 8" VerticalAlignment="Center">
                                Check
                            </CheckBox>
                            <CheckBox Style="{StaticResource MaterialDesignCheckBox}" Margin="0 0 8 8" VerticalAlignment="Center" IsChecked="True">
                                Mate
                            </CheckBox>
                            <CheckBox Style="{StaticResource MaterialDesignCheckBox}" Margin="0 0 8 8" VerticalAlignment="Center" 
                          IsEnabled="False"  IsChecked="True">
                                Disabled
                            </CheckBox>
                        </StackPanel>
                        <StackPanel Grid.Row="2"  Margin="0 16 0 0" Orientation="Horizontal">
                            <ToggleButton Style="{StaticResource MaterialDesignSwitchToggleButton}" VerticalAlignment="Center"
                          ToolTip="Default ToggleButton Style"/>
                            <ToggleButton Style="{StaticResource MaterialDesignSwitchToggleButton}" VerticalAlignment="Center" Margin="8 0 0 0" IsEnabled="False" />
                            <ToggleButton Style="{StaticResource MaterialDesignSwitchLightToggleButton}" VerticalAlignment="Center" Margin="8 0 0 0"
                          ToolTip="MaterialDesignSwitchLightToggleButton" IsChecked="True" />
                            <ToggleButton Style="{StaticResource MaterialDesignSwitchToggleButton}" VerticalAlignment="Center" Margin="8 0 0 0"
                          ToolTip="MaterialDesignSwitchToggleButton" IsChecked="True" />
                            <ToggleButton Style="{StaticResource MaterialDesignSwitchDarkToggleButton}" VerticalAlignment="Center" Margin="8 0 0 0"
                          ToolTip="MaterialDesignSwitchDarkToggleButton" IsChecked="True" />
                            <ToggleButton Style="{StaticResource MaterialDesignSwitchAccentToggleButton}" VerticalAlignment="Center" Margin="8 0 0 0"
                          ToolTip="MaterialDesignSwitchAccentToggleButton" IsChecked="True" />
                        </StackPanel>
                        <StackPanel Grid.Row="3"  Margin="0 16 0 0" Orientation="Horizontal">
                            <ToggleButton Style="{StaticResource MaterialDesignFlatToggleButton}" ToolTip="MaterialDesignFlatToggleButton">
                                <materialDesign:PackIcon Kind="Paperclip" Height="21" Width="21" />
                            </ToggleButton>
                            <ToggleButton Style="{StaticResource MaterialDesignFlatPrimaryToggleButton}"
                          Margin="8 0 0 0" 
                          ToolTip="MaterialDesignFlatPrimaryToggleButton"
                          IsChecked="True">
                                <materialDesign:PackIcon Kind="Heart" Height="21" Width="21" />
                            </ToggleButton>
                            <ToggleButton Style="{StaticResource MaterialDesignFlatPrimaryToggleButton}"
                          ToolTip="MaterialDesignFlatPrimaryToggleButton"
                          IsEnabled="False" Margin="8 0 0 0">
                                <materialDesign:PackIcon Kind="Heart" Height="21" Width="21" />
                            </ToggleButton>
                        </StackPanel>

                        <ListBox Grid.Column="1" Grid.Row="0" Style="{StaticResource MaterialDesignToolToggleListBox}" SelectedIndex="0">
                            <ListBox.ToolTip>
                                <StackPanel>
                                    <TextBlock Text="MaterialDesignToolToggleListBox" />
                                    <TextBlock Text="Exclusive selection" />
                                    <TextBlock Text="ListBoxAssist.IsToggle allows more natural toggle behaviour" />
                                </StackPanel>
                            </ListBox.ToolTip>
                            <ListBoxItem>
                                <materialDesign:PackIcon Kind="FormatAlignLeft"/>
                            </ListBoxItem>
                            <ListBoxItem>
                                <materialDesign:PackIcon Kind="FormatAlignCenter"/>
                            </ListBoxItem>
                            <ListBoxItem>
                                <materialDesign:PackIcon Kind="FormatAlignRight"/>
                            </ListBoxItem>
                            <ListBoxItem>
                                <materialDesign:PackIcon Kind="FormatAlignJustify"/>
                            </ListBoxItem>
                        </ListBox>

                        <ListBox Grid.Column="1" Grid.Row="1" Style="{StaticResource MaterialDesignToolToggleFlatListBox}" SelectedIndex="0">
                            <ListBox.ToolTip>
                                <StackPanel>
                                    <TextBlock Text="MaterialDesignToolToggleFlatListBox" />
                                    <TextBlock Text="Exclusive selection" />
                                    <TextBlock Text="ListBoxAssist.IsToggle allows more natural toggle behaviour" />
                                </StackPanel>
                            </ListBox.ToolTip>
                            <ListBoxItem>
                                <materialDesign:PackIcon Kind="FormatAlignLeft"/>
                            </ListBoxItem>
                            <ListBoxItem>
                                <materialDesign:PackIcon Kind="FormatAlignCenter"/>
                            </ListBoxItem>
                            <ListBoxItem>
                                <materialDesign:PackIcon Kind="FormatAlignRight"/>
                            </ListBoxItem>
                            <ListBoxItem>
                                <materialDesign:PackIcon Kind="FormatAlignJustify"/>
                            </ListBoxItem>
                        </ListBox>

                        <ListBox Grid.Column="1" Grid.Row="2" Style="{StaticResource MaterialDesignToolToggleListBox}" 
                 SelectionMode="Extended"
                 Margin="0 8 0 0">
                            <ListBox.ToolTip>
                                <StackPanel>
                                    <TextBlock Text="MaterialDesignToolToggleListBox" />
                                    <TextBlock Text="Multiple selection" />
                                    <TextBlock Text="ListBoxAssist.IsToggle allows more natural toggle behaviour" />
                                </StackPanel>
                            </ListBox.ToolTip>
                            <ListBoxItem>
                                <materialDesign:PackIcon Kind="FormatBold"/>
                            </ListBoxItem>
                            <ListBoxItem>
                                <materialDesign:PackIcon Kind="FormatItalic"/>
                            </ListBoxItem>
                            <ListBoxItem x:Name="UnderlineCheckbox">
                                <materialDesign:PackIcon Kind="FormatUnderline"/>
                            </ListBoxItem>
                        </ListBox>
                    </Grid>
                    <TextBlock Margin="0 32 0 0" Grid.Row="6" Style="{StaticResource MaterialDesignHeadlineTextBlock}">Rating bar</TextBlock>
                    <StackPanel Grid.Row="7" Margin="0 16 0 0" Orientation="Horizontal">
                        <materialDesign:RatingBar Value="3" x:Name="BasicRatingBar" />
                        <TextBlock Text="{Binding ElementName=BasicRatingBar, Path=Value, StringFormat=Rating: {0}}" VerticalAlignment="Top" Margin="10,2,0,0" />
                        <materialDesign:RatingBar x:Name="CustomRatingBar" Max="3" Value="2" Margin="24 0 0 0" Orientation="Vertical">
                            <materialDesign:RatingBar.ValueItemTemplate>
                                <DataTemplate DataType="system:Int32">
                                    <Grid>
                                        <materialDesign:PackIcon Kind="Heart" Height="24" Width="24" />
                                        <TextBlock Text="{Binding}" HorizontalAlignment="Center" VerticalAlignment="Center"
                                       FontSize="8"
                                       Foreground="{DynamicResource PrimaryHueMidForegroundBrush}"/>
                                    </Grid>
                                </DataTemplate>
                            </materialDesign:RatingBar.ValueItemTemplate>
                        </materialDesign:RatingBar>
                        <TextBlock Text="{Binding ElementName=CustomRatingBar, Path=Value, StringFormat=Rating: {0}}" VerticalAlignment="Top" Margin="10,2,0,0" />
                    </StackPanel>
                </StackPanel>



            </Grid>
        </TabItem>
        <TabItem Header="Chips">
            <Grid Margin="32">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <TextBlock Style="{StaticResource MaterialDesignTitleTextBlock}">Chips</TextBlock>
                <StackPanel Grid.Row="1" Margin="0 16 0 0">
                    <WrapPanel Orientation="Horizontal">
                        <materialDesign:Chip Content="James Willock" Margin="0 0 6 4">
                            <materialDesign:Chip.Icon>
                                <Image Source="Resources/ProfilePic.jpg" />
                            </materialDesign:Chip.Icon>
                        </materialDesign:Chip>
                        <materialDesign:Chip Margin="0 0 4 4">
                            Example Chip
                        </materialDesign:Chip>
                        <materialDesign:Chip Content="ANZ Bank" 
                             Icon="A" 
                             Margin="0 0 4 4" />
                        <materialDesign:Chip Content="ZNA Inc" 
                             Icon="Z" 
                             Margin="0 0 4 4" />
                        <materialDesign:Chip Content="Twitter"                                  
                                 IconBackground="{DynamicResource PrimaryHueDarkBrush}"
                                 IconForeground="{DynamicResource PrimaryHueDarkForegroundBrush}"
                                 Margin="0 0 4 4">
                            <materialDesign:Chip.Icon>
                                <materialDesign:PackIcon Kind="Twitter"></materialDesign:PackIcon>
                            </materialDesign:Chip.Icon>
                        </materialDesign:Chip>
                    </WrapPanel>
                    <WrapPanel Margin="0 12 0 0" Orientation="Horizontal">
                        <materialDesign:Chip Content="James Willock"
                                 IsDeletable="True"
                                 Margin="0 0 4 4"
                                 x:Name="ButtonsDemoChip"
                                 Click="MenuPopupButton_OnClick"
                                 DeleteClick="MenuPopupButton_OnClick"
                                 ToolTip="Just a tool tip"
                                 DeleteToolTip="Your friendly neighbour delete button"
                                 >
                            <materialDesign:Chip.Icon>
                                <Image Source="Resources/ProfilePic.jpg"></Image>
                            </materialDesign:Chip.Icon>
                        </materialDesign:Chip>
                        <materialDesign:Chip Content="Example Chip"
                                 IsDeletable="True"
                                 ToolTip="This is an example chip"
                                 Margin="0 0 4 4">
                        </materialDesign:Chip>
                        <materialDesign:Chip Content="ANZ Bank" 
                                 Icon="A"
                                 IsDeletable="True"
                                 Margin="0 0 4 4" />
                        <materialDesign:Chip Content="ZNA Inc" 
                                 Icon="Z" 
                                 IsDeletable="True"
                                 IconBackground="{DynamicResource PrimaryHueLightBrush}"
                                 IconForeground="{DynamicResource PrimaryHueLightForegroundBrush}"
                                 Margin="0 0 4 4" />
                    </WrapPanel>
                </StackPanel>
                <WrapPanel Margin="0 0 8 8" ItemWidth="200">
                    <materialDesign:Card Margin="4 4 0 0">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="140" />
                                <RowDefinition Height="*" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <Image Source="Resources/Chartridge046_small.jpg" Height="140" Width="196" Stretch="UniformToFill" />
                            <Button Grid.Row="0" Style="{StaticResource MaterialDesignFloatingActionMiniAccentButton}" 
                        HorizontalAlignment="Right" VerticalAlignment="Bottom"
                        Margin="0 0 16 -20">
                                <materialDesign:PackIcon Kind="Bike" />
                            </Button>
                            <StackPanel Grid.Row="1" Margin="8 24 8 0" >
                                <TextBlock FontWeight="Bold">Cycling</TextBlock>
                                <TextBlock TextWrapping="Wrap" VerticalAlignment="Center">A great way to keep fit and forget about the constant grind of IT.</TextBlock>
                            </StackPanel>
                            <StackPanel HorizontalAlignment="Right" Grid.Row="2" Orientation="Horizontal" Margin="8">
                                <Button Style="{StaticResource MaterialDesignToolButton}" Width="30" Padding="2 0 2 0"
                            materialDesign:RippleAssist.IsCentered="True">
                                    <materialDesign:PackIcon Kind="ShareVariant" />
                                </Button>
                                <Button Style="{StaticResource MaterialDesignToolButton}" Width="30" Padding="2 0 2 0"
                            materialDesign:RippleAssist.IsCentered="True">
                                    <materialDesign:PackIcon Kind="Heart" />
                                </Button>
                            </StackPanel>
                        </Grid>
                    </materialDesign:Card>
                    <materialDesign:Card Margin="4 4 0 0" Background="#03a9f4"
                  Foreground="{DynamicResource PrimaryHueDarkForegroundBrush}"
                  Padding="0"
                  Width="200">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <TextBlock Grid.Row="0" Margin="16 16 16 4" Style="{StaticResource MaterialDesignHeadlineTextBlock}">Call Jennifer</TextBlock>
                            <Separator Grid.Row="1" Style="{StaticResource MaterialDesignDarkSeparator}"/>
                            <TextBlock Grid.Row="2" Margin="16 0 16 8" VerticalAlignment="Center" HorizontalAlignment="Left" Style="{StaticResource MaterialDesignBody1TextBlock}">March 19, 2016</TextBlock>
                            <StackPanel Grid.Row="2" Orientation="Horizontal" Margin="16 0 16 8" HorizontalAlignment="Right">
                                <Button HorizontalAlignment="Right" Style="{StaticResource MaterialDesignToolForegroundButton}" Width="30" Padding="2 0 2 0"
                            materialDesign:RippleAssist.IsCentered="True">
                                    <materialDesign:PackIcon Kind="Phone" />
                                </Button>
                            </StackPanel>
                        </Grid>
                    </materialDesign:Card>
                    <materialDesign:Card Margin="4 4 0 0" Background="{DynamicResource PrimaryHueLightBrush}"
                  Foreground="{DynamicResource PrimaryHueLightForegroundBrush}"
                  Padding="8">
                        <TextBlock FontSize="16">Boring Text</TextBlock>
                    </materialDesign:Card>
                    <materialDesign:Card Margin="4 4 0 0" Background="{DynamicResource PrimaryHueDarkBrush}"
                  Foreground="{DynamicResource PrimaryHueDarkForegroundBrush}"
                  >
                        <StackPanel>
                            <TextBlock Margin="16 16 12 8" FontSize="16">Notes</TextBlock>
                            <CheckBox Margin="16 4 16 0" Style="{StaticResource MaterialDesignUserForegroundCheckBox}">Do something good</CheckBox>
                            <CheckBox Margin="16 4 16 0" Style="{StaticResource MaterialDesignUserForegroundCheckBox}">Take a breather</CheckBox>
                            <CheckBox Margin="16 4 16 0" Style="{StaticResource MaterialDesignUserForegroundCheckBox}">And go create</CheckBox>
                            <Separator Style="{StaticResource MaterialDesignLightSeparator}"/>
                            <StackPanel Margin="8 0 8 8" Orientation="Horizontal" HorizontalAlignment="Right">
                                <Button HorizontalAlignment="Right" Style="{StaticResource MaterialDesignToolForegroundButton}" Width="30" Padding="2 0 0 0"
                            materialDesign:RippleAssist.IsCentered="True">
                                    <materialDesign:PackIcon Kind="CheckAll" />
                                </Button>
                            </StackPanel>
                        </StackPanel>
                    </materialDesign:Card>
                    <materialDesign:Card Margin="4 4 0 0" Background="{DynamicResource PrimaryHueDarkBrush}"
                  Foreground="{DynamicResource PrimaryHueDarkForegroundBrush}"
                  Padding="8" UniformCornerRadius="6">
                        <TextBlock TextWrapping="Wrap">You can adjust the corner radius</TextBlock>
                    </materialDesign:Card>
                </WrapPanel>
            </Grid>
        </TabItem>
        <TabItem Header="Colour Zones">
            <ScrollViewer>
                <StackPanel Margin="16">
                    <TextBlock FontSize="16">Colour Zones</TextBlock>
                    <TextBlock TextWrapping="Wrap" Margin="0 16 0 0">The ColorZone control allows you to  easily define striking blocks of colour to give your application extra clarity and style, whilst still remaining within the bounds of your Material Design palette.</TextBlock>
                    <TextBlock Margin="0 16 0 0" FontSize="10">Invert the basic paper/body colours.</TextBlock>
                    <materialDesign:ColorZone Mode="Inverted" Padding="16">
                        <DockPanel>
                            <materialDesign:PopupBox DockPanel.Dock="Right" PlacementMode="BottomAndAlignRightEdges">
                                <ListBox>
                                    <ListBoxItem>Hello World</ListBoxItem>
                                    <ListBoxItem>Nice Popup</ListBoxItem>
                                    <ListBoxItem>Goodbye.</ListBoxItem>
                                </ListBox>
                            </materialDesign:PopupBox>
                            <StackPanel Orientation="Horizontal">
                                <ToggleButton Style="{DynamicResource MaterialDesignHamburgerToggleButton}" />
                                <TextBlock VerticalAlignment="Center" Margin="16 0 0 0">Material Design In XAML Toolkit</TextBlock>
                            </StackPanel>
                        </DockPanel>
                    </materialDesign:ColorZone>
                    <TextBlock Margin="0 16 0 0" FontSize="10">Use primary light back and fore colours.</TextBlock>
                    <materialDesign:ColorZone Mode="PrimaryLight" Padding="16">
                        <StackPanel Orientation="Horizontal">
                            <ToggleButton Style="{DynamicResource MaterialDesignHamburgerToggleButton}" />
                            <TextBlock VerticalAlignment="Center" Margin="16 0 0 0">Material Design In XAML Toolkit</TextBlock>
                        </StackPanel>
                    </materialDesign:ColorZone>
                    <TextBlock Margin="0 16 0 0" FontSize="10">Use primary mid colours, and nest colour zones!</TextBlock>
                    <materialDesign:ColorZone Mode="PrimaryMid" Padding="16">
                        <DockPanel>
                            <ToggleButton Style="{StaticResource MaterialDesignSwitchAccentToggleButton}" VerticalAlignment="Center"
                                  DockPanel.Dock="Right" />
                            <StackPanel Orientation="Horizontal"
                            materialDesign:RippleAssist.IsCentered="True">
                                <ToggleButton Style="{DynamicResource MaterialDesignHamburgerToggleButton}" />
                                <materialDesign:ColorZone Mode="Standard" Padding="8 4 8 4" CornerRadius="2" Panel.ZIndex="1"
                                   Margin="16 0 0 0"
                                   materialDesign:ShadowAssist.ShadowDepth="Depth1">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                        <Button Style="{DynamicResource MaterialDesignToolButton}">
                                            <materialDesign:PackIcon Kind="Magnify" Opacity=".56" />
                                        </Button>
                                        <TextBox Grid.Column="1" Margin="8 0 0 0" materialDesign:HintAssist.Hint="Build a search bar" 
                                     materialDesign:TextFieldAssist.DecorationVisibility="Hidden" BorderThickness="0"
                                     MinWidth="200" VerticalAlignment="Center" />
                                        <Button Style="{DynamicResource MaterialDesignToolButton}" Grid.Column="2">
                                            <materialDesign:PackIcon Kind="Microphone" Opacity=".56" Margin="8 0 0 0" />
                                        </Button>
                                    </Grid>
                                </materialDesign:ColorZone>
                                <Button Style="{DynamicResource MaterialDesignToolForegroundButton}" Margin="8 0 0 0" Panel.ZIndex="0">
                                    <materialDesign:PackIcon Kind="Send" />
                                </Button>
                            </StackPanel>
                        </DockPanel>
                    </materialDesign:ColorZone>
                    <TextBlock Margin="0 16 0 0" FontSize="10">Add in a corner radius and shadow.</TextBlock>
                    <materialDesign:ColorZone Mode="PrimaryDark" Padding="16" CornerRadius="3" materialDesign:ShadowAssist.ShadowDepth="Depth3" Margin="2">
                        <StackPanel Orientation="Horizontal">
                            <ToggleButton Style="{DynamicResource MaterialDesignHamburgerToggleButton}" />
                            <TextBlock VerticalAlignment="Center" Margin="16 0 0 0">Material Design In XAML Toolkit</TextBlock>
                        </StackPanel>
                    </materialDesign:ColorZone>
                    <TextBlock Margin="0 16 0 0" FontSize="10">Use accent back and fore colours.</TextBlock>
                    <materialDesign:ColorZone Mode="Accent" Padding="16">
                        <StackPanel Orientation="Horizontal">
                            <ToggleButton Style="{DynamicResource MaterialDesignHamburgerToggleButton}" />
                            <TextBlock VerticalAlignment="Center" Margin="16 0 0 0">Material Design In XAML Toolkit</TextBlock>
                        </StackPanel>
                    </materialDesign:ColorZone>
                </StackPanel>
            </ScrollViewer>
        </TabItem>
        <TabItem Header="Dialogs">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <TextBlock TextWrapping="Wrap" Margin="32">Dialogs are supported via the DialogHost control which was designed to work with MVVM/binding, code-behind, routed commands, and a pure code-based API.</TextBlock>

                <ScrollViewer HorizontalScrollBarVisibility="Auto" Grid.Row="1">
                    <Grid VerticalAlignment="Top">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="320" />
                            <ColumnDefinition Width="320" />
                            <ColumnDefinition Width="320" />
                            <ColumnDefinition Width="320" />
                        </Grid.ColumnDefinitions>

                        <!--#region SAMPLE 1-->
                        <TextBlock TextWrapping="Wrap" HorizontalAlignment="Center" VerticalAlignment="Top"
                           Margin="8 0 8 0"
                           >SAMPLE 1: Localised dialog encapsulating specific content, launched from a routed command, response handled in code-behind.</TextBlock>
                        <materialDesign:DialogHost DialogClosing="Sample1_DialogHost_OnDialogClosing"
                                Grid.Column="0" Grid.Row="1" HorizontalAlignment="Center" VerticalAlignment="Center">
                            <materialDesign:DialogHost.DialogContent>
                                <StackPanel Margin="16">
                                    <TextBlock>Add a new fruit.</TextBlock>
                                    <TextBox Margin="0 8 0 0" HorizontalAlignment="Stretch" x:Name="FruitTextBox" />
                                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" >
                                        <Button Style="{StaticResource MaterialDesignFlatButton}"
                                        IsDefault="True"
                                        Margin="0 8 8 0"
                                        Command="materialDesign:DialogHost.CloseDialogCommand">
                                            <Button.CommandParameter>
                                                <system:Boolean>True</system:Boolean>
                                            </Button.CommandParameter>
                                            ACCEPT
                                        </Button>
                                        <Button Style="{StaticResource MaterialDesignFlatButton}"
                                        IsCancel="True"
                                        Margin="0 8 8 0"
                                        Command="materialDesign:DialogHost.CloseDialogCommand">
                                            <Button.CommandParameter>
                                                <system:Boolean>False</system:Boolean>
                                            </Button.CommandParameter>
                                            CANCEL
                                        </Button>
                                    </StackPanel>
                                </StackPanel>
                            </materialDesign:DialogHost.DialogContent>
                            <Border BorderThickness="1" BorderBrush="{DynamicResource PrimaryHueMidBrush}"
                            MinWidth="256" MinHeight="256" ClipToBounds="True">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="*" />
                                        <RowDefinition Height="Auto" />
                                    </Grid.RowDefinitions>
                                    <ListBox x:Name="FruitListBox">
                                        <ListBoxItem>Apple</ListBoxItem>
                                        <ListBoxItem>Banana</ListBoxItem>
                                        <ListBoxItem>Pear</ListBoxItem>
                                    </ListBox>
                                    <materialDesign:ColorZone Mode="PrimaryMid" Grid.Row="1" Effect="{DynamicResource MaterialDesignShadowDepth5}">
                                        <TextBlock Margin="16">Fruit Bowl</TextBlock>
                                    </materialDesign:ColorZone>
                                    <Button Style="{StaticResource MaterialDesignFloatingActionMiniAccentButton}"                                
                                    Command="{x:Static materialDesign:DialogHost.OpenDialogCommand}"
                                    VerticalAlignment="Bottom" HorizontalAlignment="Right" 
                                    Grid.Row="0" Margin="0 0 28 -20">
                                        <Viewbox Width="22" Height="22">
                                            <Canvas Width="24" Height="24">
                                                <Path Data="M19,13H13V19H11V13H5V11H11V5H13V11H19V13Z" Fill="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=Button}, Path=Foreground}" />
                                            </Canvas>
                                        </Viewbox>
                                    </Button>
                                </Grid>
                            </Border>
                        </materialDesign:DialogHost>
                        <!--#endregion -->

                        <!--#region SAMPLE 2-->
                        <TextBlock Grid.Column="1" Grid.Row="0" TextWrapping="Wrap" VerticalAlignment="Top" Margin="8 0 8 0">SAMPLE 2: Top level dialog,  using OpenDialog, passing content via the Parameter. You can pass a view model, provided a corresponding DataTemplate can be found in the scope of the root DialogHost.</TextBlock>
                        <StackPanel Grid.Column="1" Grid.Row="1" VerticalAlignment="Center">
                            <!--the request to open the dialog will bubble up to the top-most DialogHost, but we can used the attached property based event to handle the response -->
                            <Button Command="{x:Static materialDesign:DialogHost.OpenDialogCommand}"
                            materialDesign:DialogHost.DialogClosingAttached="Sample2_DialogHost_OnDialogClosing"
                            Width="128">
                                <Button.CommandParameter>
                                    <StackPanel Margin="16">
                                        <ProgressBar Style="{DynamicResource MaterialDesignCircularProgressBar}" HorizontalAlignment="Center" Margin="16" IsIndeterminate="True" Value="0" />
                                        <Button Style="{StaticResource MaterialDesignFlatButton}" IsCancel="True" 
                                        Command="{x:Static materialDesign:DialogHost.CloseDialogCommand}"
                                        CommandParameter="Sample2Cancel"
                                        HorizontalAlignment="Center">CANCEL</Button>
                                    </StackPanel>
                                </Button.CommandParameter>
                                PASS VIEW
                            </Button>
                            <Button Command="{x:Static materialDesign:DialogHost.OpenDialogCommand}"
                            Width="128" Margin="0 32 0 0">
                                <Button.CommandParameter>
                                    <!-- the simplest view model of all, a DateTime. the view can be found in the resources of MainWindow.xaml  -->
                                    <system:DateTime>1966-JUL-30</system:DateTime>
                                </Button.CommandParameter>
                                PASS MODEL
                            </Button>
                        </StackPanel>
                        <!--#endregion-->

                        <!--#region SAMPLE 3-->
                        <TextBlock Grid.Column="2" Grid.Row="0" TextWrapping="Wrap" VerticalAlignment="Top" Margin="8 0 8 0">SAMPLE 3: Open and listen to the dialog entirely from code in a view model.</TextBlock>
                        <!-- Executes a command on DialogsViewModel.cs, which will launch the dialog from code -->
                        <StackPanel Grid.Column="2" Grid.Row="1" >
                            <Button Command="{Binding RunDialogCommand}"
                        Width="128">
                                RUN CODE
                            </Button>
                            <Button Command="{Binding RunExtendedDialogCommand}"
                        Width="128" Margin="0 32 0 0">
                                EXTENDED
                            </Button>
                        </StackPanel>
                        <!--#endregion-->


                        <!--#region SAMPLE 4-->
                        <TextBlock TextWrapping="Wrap" HorizontalAlignment="Center" VerticalAlignment="Top"
                           Grid.Column="3" Margin="8 0 8 0"
                           >SAMPLE 4: Dialog managed from view model using IsOpen and custom commands (ignoring the provided routed commands).</TextBlock>
                        <materialDesign:DialogHost Grid.Column="3" Grid.Row="1"  HorizontalAlignment="Center" VerticalAlignment="Center"
                                           IsOpen="{Binding IsSample4DialogOpen}"
                                           DialogContent="{Binding Sample4Content}"
                                           CloseOnClickAway="True">
                            <Border BorderThickness="1" BorderBrush="{DynamicResource PrimaryHueMidBrush}"
                            MinWidth="256" MinHeight="256" ClipToBounds="True">
                                <Button HorizontalAlignment="Center" VerticalAlignment="Center"
                                Command="{Binding OpenSample4DialogCommand}"
                                >RUN</Button>
                            </Border>
                        </materialDesign:DialogHost>
                        <!--#endregion-->
                        
                        
                    </Grid>
                </ScrollViewer>
            </Grid>
        </TabItem>
        <TabItem Header="Drawers">
            <materialDesign:DrawerHost Margin="64" HorizontalAlignment="Center" VerticalAlignment="Center" BorderThickness="2" BorderBrush="{DynamicResource MaterialDesignDivider}">
                <materialDesign:DrawerHost.LeftDrawerContent>
                    <StackPanel Margin="16">
                        <TextBlock Margin="4" HorizontalAlignment="Center">LEFT FIELD</TextBlock>
                        <Button Command="{x:Static materialDesign:DrawerHost.CloseDrawerCommand}"
                        CommandParameter="{x:Static Dock.Left}"
                        Margin="4" HorizontalAlignment="Center"
                        Style="{DynamicResource MaterialDesignFlatButton}">
                            CLOSE THIS
                        </Button>
                        <Button Command="{x:Static materialDesign:DrawerHost.CloseDrawerCommand}"
                        Margin="4" HorizontalAlignment="Center"
                        Style="{DynamicResource MaterialDesignFlatButton}">
                            CLOSE ALL
                        </Button>
                    </StackPanel>
                </materialDesign:DrawerHost.LeftDrawerContent>
                <materialDesign:DrawerHost.TopDrawerContent>
                    <StackPanel Margin="16" HorizontalAlignment="Center" Orientation="Horizontal">
                        <TextBlock Margin="4" VerticalAlignment="Center">TOP BANANA</TextBlock>
                        <Button Command="{x:Static materialDesign:DrawerHost.CloseDrawerCommand}"
                        Style="{DynamicResource MaterialDesignFlatButton}"
                        Margin="4" VerticalAlignment="Center">
                            CLOSE ALL
                        </Button>
                        <Button Command="{x:Static materialDesign:DrawerHost.CloseDrawerCommand}"
                        CommandParameter="{x:Static Dock.Top}"
                        Style="{DynamicResource MaterialDesignFlatButton}"
                        Margin="4" VerticalAlignment="Center">
                            CLOSE THIS
                        </Button>
                    </StackPanel>
                </materialDesign:DrawerHost.TopDrawerContent>
                <materialDesign:DrawerHost.RightDrawerContent>
                    <StackPanel Margin="16">
                        <TextBlock Margin="4" HorizontalAlignment="Center">THE RIGHT STUFF</TextBlock>
                        <Button Command="{x:Static materialDesign:DrawerHost.CloseDrawerCommand}"
                        CommandParameter="{x:Static Dock.Right}"
                        Margin="4" HorizontalAlignment="Center"
                        Style="{DynamicResource MaterialDesignFlatButton}">
                            CLOSE THIS
                        </Button>
                        <Button Command="{x:Static materialDesign:DrawerHost.CloseDrawerCommand}"
                        Margin="4" HorizontalAlignment="Center"
                        Style="{DynamicResource MaterialDesignFlatButton}">
                            CLOSE ALL
                        </Button>
                    </StackPanel>
                </materialDesign:DrawerHost.RightDrawerContent>
                <materialDesign:DrawerHost.BottomDrawerContent>
                    <StackPanel Margin="16" HorizontalAlignment="Center" Orientation="Horizontal">
                        <TextBlock Margin="4" VerticalAlignment="Center">BOTTOM BRACKET</TextBlock>
                        <Button Command="{x:Static materialDesign:DrawerHost.CloseDrawerCommand}"
                        Style="{DynamicResource MaterialDesignFlatButton}"
                        Margin="4" VerticalAlignment="Center">
                            CLOSE ALL
                        </Button>
                        <Button Command="{x:Static materialDesign:DrawerHost.CloseDrawerCommand}"
                        CommandParameter="{x:Static Dock.Bottom}"
                        Style="{DynamicResource MaterialDesignFlatButton}"
                        Margin="4" VerticalAlignment="Center">
                            CLOSE THIS
                        </Button>
                    </StackPanel>
                </materialDesign:DrawerHost.BottomDrawerContent>
                <Grid MinWidth="480" MinHeight="480">
                    <Grid VerticalAlignment="Center" HorizontalAlignment="Center">
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <Button Command="{x:Static materialDesign:DrawerHost.OpenDrawerCommand}"
                        CommandParameter="{x:Static Dock.Left}"
                        Grid.Row="1" Grid.Column="0"  Margin="4">
                            <materialDesign:PackIcon Kind="ArrowLeft" />
                        </Button>
                        <Button Command="{x:Static materialDesign:DrawerHost.OpenDrawerCommand}"
                        CommandParameter="{x:Static Dock.Top}"
                        Grid.Row="0" Grid.Column="1" Margin="4">
                            <materialDesign:PackIcon Kind="ArrowUp" />
                        </Button>
                        <Button Command="{x:Static materialDesign:DrawerHost.OpenDrawerCommand}"
                        CommandParameter="{x:Static Dock.Right}"
                        Grid.Row="1" Grid.Column="2" Margin="4">
                            <materialDesign:PackIcon Kind="ArrowRight" />
                        </Button>
                        <Button Command="{x:Static materialDesign:DrawerHost.OpenDrawerCommand}"
                        CommandParameter="{x:Static Dock.Bottom}"
                        Grid.Row="2" Grid.Column="1" Margin="4">
                            <materialDesign:PackIcon Kind="ArrowDown" />
                        </Button>
                        <Button Command="{x:Static materialDesign:DrawerHost.OpenDrawerCommand}"
                        Grid.Row="1" Grid.Column="1" Margin="4" 
                        Style="{DynamicResource MaterialDesignRaisedAccentButton}">
                            <materialDesign:PackIcon Kind="ArrowAll" />
                        </Button>
                    </Grid>
                </Grid>
            </materialDesign:DrawerHost>
        </TabItem>
        <TabItem Header="Expander">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="1*" />
                    <ColumnDefinition Width="1*" />
                </Grid.ColumnDefinitions>
                <StackPanel>
                    <Expander HorizontalAlignment="Stretch"
                      Header="Expander Example 1a">
                        <StackPanel Orientation="Vertical"
                            TextBlock.Foreground="{DynamicResource MaterialDesignBody}"
                            Margin="24,8,24,16">
                            <TextBlock Text="Your Content" />
                            <TextBlock Opacity=".68" Text="Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum."
                               TextWrapping="Wrap"/>
                        </StackPanel>
                    </Expander>
                    <Expander HorizontalAlignment="Stretch"
                      Header="Expander Example 1b">
                        <StackPanel Orientation="Vertical"
                            TextBlock.Foreground="{DynamicResource MaterialDesignBody}"
                            Margin="24,8,24,16">
                            <TextBlock Text="Your Content" />
                            <TextBlock Opacity=".68" Text="Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum."
                               TextWrapping="Wrap"/>
                        </StackPanel>
                    </Expander>
                    <Expander HorizontalAlignment="Stretch"
                      Header="Expander Example 1c">
                        <StackPanel Orientation="Vertical"
                            TextBlock.Foreground="{DynamicResource MaterialDesignBody}"
                            Margin="24,8,24,16">
                            <TextBlock Text="Your Content" />
                            <TextBlock Opacity=".68" Text="Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum."
                               TextWrapping="Wrap"/>
                        </StackPanel>
                    </Expander>
                </StackPanel>
                <materialDesign:Card Grid.Row="1" Background="{DynamicResource MaterialDesignBackground}"
                             Margin="0 24 0 0">
                    <StackPanel>
                        <Expander HorizontalAlignment="Stretch"
                      Header="Expander Example 2a">
                            <StackPanel Orientation="Vertical"
                            TextBlock.Foreground="{DynamicResource MaterialDesignBody}"
                            Margin="24,8,24,16">
                                <TextBlock Text="Your Content" />
                                <TextBlock Opacity=".68" Text="Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum."
                               TextWrapping="Wrap"/>
                            </StackPanel>
                        </Expander>
                        <Border Background="{DynamicResource MaterialDesignDivider}" Height="1" HorizontalAlignment="Stretch" SnapsToDevicePixels="True" />
                        <Expander HorizontalAlignment="Stretch"
                      Header="Expander Example 2b">
                            <StackPanel Orientation="Vertical"
                            TextBlock.Foreground="{DynamicResource MaterialDesignBody}"
                            Margin="24,8,24,16">
                                <TextBlock Text="Your Content" />
                                <TextBlock Opacity=".68" Text="Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum."
                               TextWrapping="Wrap"/>
                            </StackPanel>
                        </Expander>
                        <Border Background="{DynamicResource MaterialDesignDivider}" Height="1" HorizontalAlignment="Stretch" SnapsToDevicePixels="True" />
                        <Expander HorizontalAlignment="Stretch"
                      Header="Expander Example 2c">
                            <StackPanel Orientation="Vertical"
                            TextBlock.Foreground="{DynamicResource MaterialDesignBody}"
                            Margin="24,8,24,16">
                                <TextBlock Text="Your Content" />
                                <TextBlock Opacity=".68" Text="Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum."
                               TextWrapping="Wrap"/>
                            </StackPanel>
                        </Expander>
                    </StackPanel>
                </materialDesign:Card>
                <StackPanel Grid.Column="1" HorizontalAlignment="Left" Margin="8" Orientation="Horizontal" VerticalAlignment="Stretch"                    
                    Grid.RowSpan="2">
                    <Expander ExpandDirection="Right">
                        <Expander.Header>
                            <TextBlock Text="Expander Example 3a" RenderTransformOrigin=".5,.5">
                                <TextBlock.LayoutTransform>
                                    <RotateTransform Angle="90" />
                                </TextBlock.LayoutTransform>
                            </TextBlock>
                        </Expander.Header>
                        <StackPanel Orientation="Vertical"
                            TextBlock.Foreground="{DynamicResource MaterialDesignBody}"
                            Margin="8,24,16,24">
                            <TextBlock Text="Your Content" />
                            <TextBlock Opacity=".68" Text="Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum."
                               MaxWidth="180"
                               TextWrapping="Wrap"/>
                        </StackPanel>
                    </Expander>
                    <Border Background="{DynamicResource MaterialDesignDivider}" Width="1" VerticalAlignment="Stretch" SnapsToDevicePixels="True" />
                    <Expander ExpandDirection="Right">
                        <Expander.Header>
                            <TextBlock Text="Expander Example 3b" RenderTransformOrigin=".5,.5">
                                <TextBlock.LayoutTransform>
                                    <RotateTransform Angle="90" />
                                </TextBlock.LayoutTransform>
                            </TextBlock>
                        </Expander.Header>
                        <StackPanel Orientation="Vertical"
                            TextBlock.Foreground="{DynamicResource MaterialDesignBody}"
                            Margin="8,24,16,24">
                            <TextBlock Text="Your Content" />
                            <TextBlock Opacity=".68" Text="Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum."
                               MaxWidth="180"
                               TextWrapping="Wrap"/>
                        </StackPanel>
                    </Expander>
                    <Border Background="{DynamicResource MaterialDesignDivider}" Width="1" VerticalAlignment="Stretch" SnapsToDevicePixels="True" />
                    <Expander ExpandDirection="Right">
                        <Expander.Header>
                            <TextBlock Text="Expander Example 3c" RenderTransformOrigin=".5,.5">
                                <TextBlock.LayoutTransform>
                                    <RotateTransform Angle="90" />
                                </TextBlock.LayoutTransform>
                            </TextBlock>
                        </Expander.Header>
                        <StackPanel Orientation="Vertical"
                            TextBlock.Foreground="{DynamicResource MaterialDesignBody}"
                            Margin="8,24,16,24">
                            <TextBlock Text="Your Content" />
                            <TextBlock Opacity=".68" Text="Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum."
                               MaxWidth="180"
                               TextWrapping="Wrap"/>
                        </StackPanel>
                    </Expander>
                </StackPanel>
            </Grid>
        </TabItem>
        <TabItem Header="Grids">
            <ScrollViewer>
                <StackPanel>
                    <TextBlock>Custom Columns</TextBlock>
                    <DataGrid Margin="0 8 0 0" ItemsSource="{Binding Items3}" CanUserSortColumns="True" CanUserAddRows="False" AutoGenerateColumns="False"
                      materialDesign:DataGridAssist.CellPadding="13 8 8 8" materialDesign:DataGridAssist.ColumnHeaderPadding="8">
                        <DataGrid.Columns>
                            <DataGridCheckBoxColumn Binding="{Binding IsSelected}" 
                                            ElementStyle="{StaticResource MaterialDesignDataGridCheckBoxColumnStyle}"
                                            EditingElementStyle="{StaticResource MaterialDesignDataGridCheckBoxColumnEditingStyle}"
                                            >
                                <DataGridCheckBoxColumn.Header>
                                    <!--padding to allow hit test to pass thru for sorting -->
                                    <Border Background="Transparent" Padding="6 0 6 0" HorizontalAlignment="Center">
                                        <CheckBox HorizontalAlignment="Center"                                               
                                          DataContext="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Path=DataContext}"
                                          IsChecked="{Binding IsAllItems3Selected}" />
                                    </Border>
                                </DataGridCheckBoxColumn.Header>
                            </DataGridCheckBoxColumn>
                            <DataGridTextColumn Binding="{Binding Code}"
                                        Header="Code"
                                        EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnEditingStyle}" />
                            <!-- if you want to use the pop up style (MaterialDesignDataGridTextColumnPopupEditingStyle), you must use MaterialDataGridTextColumn -->
                            <materialDesign:MaterialDataGridTextColumn Binding="{Binding Name}"
                                                               Header="Name"                                                        
                                                               EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnPopupEditingStyle}" 
                                                               />
                            <!-- set a max length to get an indicator in the editor -->
                            <materialDesign:MaterialDataGridTextColumn Binding="{Binding Description}"
                                                               Header="Description"                                                        
                                                               MaxLength="255" 
                                                               EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnPopupEditingStyle}"  />
                            <materialDesign:MaterialDataGridTextColumn Binding="{Binding Numeric}"
                                                        Header="Numeric"                                                         
                                                        EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnPopupEditingStyle}">
                                <DataGridTextColumn.HeaderStyle>
                                    <Style TargetType="{x:Type DataGridColumnHeader}" BasedOn="{StaticResource MaterialDesignDataGridColumnHeader}">
                                        <Setter Property="HorizontalAlignment" Value="Right" />
                                    </Style>
                                </DataGridTextColumn.HeaderStyle>
                                <DataGridTextColumn.ElementStyle>
                                    <Style TargetType="{x:Type TextBlock}">
                                        <Setter Property="HorizontalAlignment" Value="Right" />
                                    </Style>
                                </DataGridTextColumn.ElementStyle>
                            </materialDesign:MaterialDataGridTextColumn>

                            <!-- use custom combo box column to get better combos. Use ItemsSourceBinding as your binding template to be applied to each combo -->
                            <materialDesign:MaterialDataGridComboBoxColumn Header="Food"        
                                                                   SelectedValueBinding="{Binding Food}"                                                            
                                                                   ItemsSourceBinding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGrid}}, Path=DataContext.Foods}" />
                        </DataGrid.Columns>
                    </DataGrid>
                    <TextBlock Margin="0 24 0 0">Auto Generated Columns</TextBlock>
                    <DataGrid  Margin="0 8 0 0" ItemsSource="{Binding Items3}" CanUserSortColumns="True" CanUserAddRows="False" />
                    <TextBlock Margin="0 24 0 0">Custom Padding</TextBlock>
                    <DataGrid  Margin="0 8 0 0" ItemsSource="{Binding Items3}" CanUserSortColumns="True" CanUserAddRows="False"
                       materialDesign:DataGridAssist.CellPadding="4 2 2 2" materialDesign:DataGridAssist.ColumnHeaderPadding="4 2 2 2"
                       />
                </StackPanel>
            </ScrollViewer>
        </TabItem>

        <TabItem Header="Group box">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition/>
                </Grid.RowDefinitions>

                <GroupBox Grid.Column="0" Grid.Row="0" Header="Default Look" Margin="16">
                    <TextBlock>My Content</TextBlock>
                </GroupBox>

                <GroupBox Grid.Column="1" Grid.Row="0" Header="Shadow Header" Style="{DynamicResource MaterialDesignGroupBox}" Margin="16" materialDesign:ShadowAssist.ShadowDepth="Depth3" BorderThickness="0">
                    <TextBlock Margin="6,6,6,6" TextWrapping="Wrap">Short loin picanha boudin pork belly. Ground round porchetta biltong, cow t-bone tri-tip strip steak chuck filet mignon jowl turducken. Landjaeger strip steak pork chop, jowl sirloin pork capicola andouille. Kevin ribeye tongue, drumstick hamburger frankfurter t-bone corned beef beef biltong cow venison. Biltong picanha bresaola pork belly, filet mignon spare ribs doner pork chop kielbasa. Swine flank drumstick pork belly pancetta spare ribs rump filet mignon.</TextBlock>
                </GroupBox>

                <Border Grid.Column="2" Grid.Row="0" Background="{DynamicResource MaterialDesignBackground}">
                    <GroupBox Header="Transparent Background" Style="{DynamicResource MaterialDesignGroupBox}" Margin="16" UseLayoutRounding="True" SnapsToDevicePixels="True">
                        <TextBlock>My Content</TextBlock>
                    </GroupBox>
                </Border>
                <GroupBox Grid.Column="0" Grid.Row="1" Header="Accent Header" Style="{DynamicResource MaterialDesignGroupBox}" Margin="16" materialDesign:ColorZoneAssist.Mode="Accent">
                    <TextBlock>My Content</TextBlock>
                </GroupBox>

                <GroupBox Grid.Column="1" Grid.Row="1" Header="Card Group Box" Style="{DynamicResource MaterialDesignCardGroupBox}" Margin="16">
                    <GroupBox.HeaderTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal">
                                <materialDesign:PackIcon Kind="ImageArea" Height="32" Width="32" VerticalAlignment="Center" />
                                <!--<TextBlock Margin="8,0,0,0" VerticalAlignment="Center" Style="{StaticResource MaterialDesignSubheadingTextBlock}" Text="{Binding}"/>-->
                            </StackPanel>
                        </DataTemplate>
                    </GroupBox.HeaderTemplate>
                    <Image Source="Resources/Contact.png" VerticalAlignment="Center" HorizontalAlignment="Center" />
                </GroupBox>
            </Grid>
        </TabItem>
        <TabItem Header="Home">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <Grid HorizontalAlignment="Center" VerticalAlignment="Top" Margin="16">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <Image Source="Resources/ms-icon-310x310.png" Stretch="Uniform" Width="100" Height="100" />
                    <StackPanel Grid.Column="1" Margin="24 0 0 0" VerticalAlignment="Center">
                        <TextBlock Style="{StaticResource MaterialDesignDisplay1TextBlock}" TextWrapping="Wrap">Welcome to Material Design In XAML Toolkit</TextBlock>
                        <Button Style="{StaticResource MaterialDesignFlatButton}"
                        Command="{x:Static materialDesign:DrawerHost.OpenDrawerCommand}">
                            <StackPanel Orientation="Horizontal">
                                <materialDesign:PackIcon Kind="Binoculars" />
                                <TextBlock Margin="8 0 0 0">EXPLORE</TextBlock>
                            </StackPanel>
                        </Button>
                    </StackPanel>
                </Grid>
                <ScrollViewer Grid.Row="1" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Disabled"
                      HorizontalAlignment="Center"
                      VerticalAlignment="Bottom"
                      Margin="0 0 0 32">
                    <Grid>
                        <StackPanel Orientation="Horizontal">
                            <materialDesign:Card Width="420" Margin="4 2 8 16" Height="270">
                                <Grid VerticalAlignment="Stretch" >
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="*" />
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="200" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>
                                    <Image Source="Resources/Contact.png" Grid.RowSpan="5" StretchDirection="Both" VerticalAlignment="Stretch" Stretch="UniformToFill" />
                                    <TextBlock Grid.Column="1" Style="{StaticResource MaterialDesignHeadlineTextBlock}" Margin="16 16 16 2">Get In Touch</TextBlock>
                                    <TextBlock Grid.Column="1" Grid.Row="1" TextWrapping="Wrap" Margin="16 0 16 8" Foreground="{DynamicResource MaterialDesignBodyLight}"
                                       VerticalAlignment="Center">Say hello, make a feature request, or raise a bug through one of these channels:</TextBlock>
                                    <Border Grid.Column="1" Grid.Row="2" BorderThickness="0 1 0 0" BorderBrush="{DynamicResource MaterialDesignDivider}" Margin="0 8 0 0">
                                        <Grid Margin="8">
                                            <Button Style="{DynamicResource MaterialDesignFlatButton}" HorizontalAlignment="Left"
                                            x:Name="GitHubButton" Click="MenuPopupButton_OnClick">
                                                <StackPanel Orientation="Horizontal">
                                                    <materialDesign:PackIcon Kind="GithubCircle" />
                                                    <TextBlock Margin="8 0 0 0" VerticalAlignment="Center">GitHub</TextBlock>
                                                </StackPanel>
                                            </Button>
                                            <Button Style="{DynamicResource MaterialDesignFlatButton}" HorizontalAlignment="Right"
                                            x:Name="TwitterButton" Click="MenuPopupButton_OnClick">
                                                <StackPanel Orientation="Horizontal">
                                                    <materialDesign:PackIcon Kind="Twitter" />
                                                    <TextBlock Margin="8 0 0 0" VerticalAlignment="Center">Twitter</TextBlock>
                                                </StackPanel>
                                            </Button>
                                        </Grid>
                                    </Border>
                                    <Border Grid.Column="1" Grid.Row="3" BorderThickness="0 1 0 0" BorderBrush="{DynamicResource MaterialDesignDivider}">
                                        <Grid Margin="8">
                                            <Button Style="{DynamicResource MaterialDesignFlatButton}" HorizontalAlignment="Left"
                                            x:Name="ChatButton" Click="MenuPopupButton_OnClick">
                                                <StackPanel Orientation="Horizontal">
                                                    <materialDesign:PackIcon Kind="Message" />
                                                    <TextBlock Margin="8 0 0 0" VerticalAlignment="Center">Chat</TextBlock>
                                                </StackPanel>
                                            </Button>
                                            <Button Style="{DynamicResource MaterialDesignFlatButton}" HorizontalAlignment="Right"
                                            x:Name="EmailButton" Click="MenuPopupButton_OnClick">
                                                <StackPanel Orientation="Horizontal">
                                                    <materialDesign:PackIcon Kind="Email" />
                                                    <TextBlock Margin="8 0 0 0" VerticalAlignment="Center">Email</TextBlock>
                                                </StackPanel>
                                            </Button>
                                        </Grid>
                                    </Border>
                                </Grid>
                            </materialDesign:Card>
                            <materialDesign:Card Width="420" Margin="8 2 4 16" Height="270">
                                <Grid VerticalAlignment="Stretch">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="200" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>
                                    <materialDesign:PackIcon Kind="GithubCircle" Width="160" Height="160" HorizontalAlignment="Center" VerticalAlignment="Center" />
                                    <StackPanel Grid.Column="1">
                                        <TextBlock Style="{StaticResource MaterialDesignHeadlineTextBlock}" Margin="16 16 16 8">Open Source</TextBlock>
                                        <TextBlock TextWrapping="Wrap" Margin="16 0 16 8" Foreground="{DynamicResource MaterialDesignBodyLight}"
                                           VerticalAlignment="Top">This project is completely open source. If you like it and want to say thanks you could hit the GitHub Star button, tweet or post about it, or tell your mum about it!</TextBlock>
                                    </StackPanel>
                                    <Border Grid.Row="1" Grid.ColumnSpan="2" BorderThickness="0 1 0 0" BorderBrush="{DynamicResource MaterialDesignDivider}" Padding="8">
                                        <DockPanel>
                                            <Button Style="{DynamicResource MaterialDesignFlatButton}" 
                                            DockPanel.Dock="Right"
                                            x:Name="DonateButton" Click="MenuPopupButton_OnClick">
                                                <StackPanel Orientation="Horizontal">
                                                    <materialDesign:PackIcon Kind="Gift" />
                                                    <TextBlock Margin="8 0 0 0" VerticalAlignment="Center">Donate</TextBlock>
                                                </StackPanel>
                                            </Button>
                                            <TextBlock Foreground="{DynamicResource MaterialDesignBodyLight}" TextWrapping="Wrap" Margin="16" VerticalAlignment="Center">
                                        Feel like you want to make a donation?  It would be gratefully received.  Click the button to donate via Pledgie.
                                            </TextBlock>
                                        </DockPanel>
                                    </Border>
                                </Grid>
                            </materialDesign:Card>
                        </StackPanel>
                    </Grid>
                </ScrollViewer>
                <materialDesign:PopupBox Style="{StaticResource MaterialDesignMultiFloatingActionPopupBox}"
                                 HorizontalAlignment="Right" VerticalAlignment="Bottom"
                                 Margin="32" Grid.Row="1">
                    <StackPanel>
                        <Button ToolTip="GitHub" Click="MenuPopupButton_OnClick">
                            <materialDesign:PackIcon Kind="GithubCircle" Height="20" Width="20" />
                        </Button>
                        <Button ToolTip="Twitter" Click="MenuPopupButton_OnClick"
                        Background="{DynamicResource PrimaryHueMidBrush}"
                        Foreground="{DynamicResource PrimaryHueMidForegroundBrush}">
                            <materialDesign:PackIcon Kind="Twitter" />
                        </Button>
                        <Button ToolTip="Chat" Click="MenuPopupButton_OnClick">
                            <!-- mix up the colours by brinking in a named palette (see merged dictionaries at top) -->
                            <Button.Background>
                                <SolidColorBrush Color="{StaticResource GreenPrimary500}" />
                            </Button.Background>
                            <Button.Foreground>
                                <SolidColorBrush Color="{StaticResource GreenPrimary500Foreground}" />
                            </Button.Foreground>
                            <materialDesign:PackIcon Kind="Message" />
                        </Button>
                        <Button ToolTip="Email" Click="MenuPopupButton_OnClick"
                        Background="{DynamicResource SecondaryAccentBrush}"
                        Foreground="{DynamicResource SecondaryAccentForegroundBrush}"
                        >
                            <materialDesign:PackIcon Kind="Email" />
                        </Button>
                        <Button ToolTip="Feel like you want to make a donation?  It would be gratefully received.  Click the button to donate via Pledgie." 
                        Click="MenuPopupButton_OnClick">
                            <Button.Background>
                                <SolidColorBrush Color="{StaticResource GreenPrimary200}" />
                            </Button.Background>
                            <Button.Foreground>
                                <SolidColorBrush Color="{StaticResource GreenPrimary200Foreground}" />
                            </Button.Foreground>
                            <materialDesign:PackIcon Kind="Gift" />
                        </Button>
                    </StackPanel>
                </materialDesign:PopupBox>
            </Grid>
        </TabItem>
        <TabItem Header="Icon">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <StackPanel>
                    <TextBlock Style="{StaticResource MaterialDesignDisplay2TextBlock}">Icon Pack</TextBlock>
                    <TextBlock Style="{StaticResource MaterialDesignHeadlineTextBlock}"
                       Margin="0 8 0 0">
                Material Design In XAML Toolkit includes the Material Design Icons collection.
                    </TextBlock>
                    <TextBlock Margin="0 12 0 0">
                For more information on Material Design Icons see the official website: 
                <Hyperlink Command="{Binding OpenDotComCommand}">materialdesignicons.com</Hyperlink>
                    </TextBlock>
                </StackPanel>
                <ListBox ItemsSource="{Binding Kinds}" Grid.Row="1" Margin="0 8 0 0"
                 x:Name="KindsListBox">
                    <!--<ListBox.ItemsPanel>
                <ItemsPanelTemplate>
                    <virtualCollection:VirtualizingWrapPanel ItemHeight="80" ItemWidth="80" />
                </ItemsPanelTemplate>
            </ListBox.ItemsPanel>-->
                    <ListBox.ItemTemplate>
                        <DataTemplate DataType="materialDesign:PackIconKind">
                            <DockPanel ToolTip="{Binding }" Width="64" Height="64" Background="Transparent">
                                <TextBlock Text="{Binding }" DockPanel.Dock="Bottom" TextTrimming="CharacterEllipsis" HorizontalAlignment="Center" />
                                <materialDesign:PackIcon Kind="{Binding }" VerticalAlignment="Center" HorizontalAlignment="Center"
                                                 Width="32" Height="32"                                                 
                                                 />
                            </DockPanel>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>
                <materialDesign:ColorZone Mode="PrimaryLight" Grid.Row="2" Margin="0 8 0 0" CornerRadius="2" materialDesign:ShadowAssist.ShadowDepth="Depth2">
                    <StackPanel Orientation="Horizontal" Margin="8">
                        <Border Background="White" MaxHeight="30" CornerRadius="3" ToolTip="Enter to search, ignore case">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <Button Style="{DynamicResource MaterialDesignToolButton}" 
                                Command="{Binding SearchCommand}" x:Name="SearchButton"
                                CommandParameter="{Binding ElementName=SearchBox, Path=Text}"
                                Height="24" Width="24">
                                    <materialDesign:PackIcon Kind="Magnify" Opacity=".56" />
                                </Button>
                                <TextBox Grid.Column="1" Margin="5 0 0 0" KeyDown="Search_OnKeyDown"
                             materialDesign:HintAssist.Hint="Search" x:Name="SearchBox"
                             materialDesign:TextFieldAssist.DecorationVisibility="Hidden" BorderThickness="0"
                             MinWidth="200" VerticalAlignment="Center" />
                            </Grid>
                        </Border>
                        <TextBlock Margin="8 0 0 0" Style="{StaticResource MaterialDesignSubheadingTextBlock}" VerticalAlignment="Center">Usage:</TextBlock>
                        <materialDesign:ColorZone Mode="Standard" Margin="8" CornerRadius="2" Padding="6 2 6 2">
                            <TextBox IsReadOnly="True"
                             materialDesign:TextFieldAssist.DecorationVisibility="Collapsed"
                             BorderThickness="0"
                             FontFamily="Courier New"
                             FontWeight="Bold"
                             GotFocus="TextBox_OnGotFocus"
                             Text="{Binding  ElementName=KindsListBox, Path=SelectedValue, StringFormat='&lt;materialDesign:PackIcon Kind=&quot;{0}&quot; \/>'}" />
                        </materialDesign:ColorZone>
                        <materialDesign:PackIcon Kind="{Binding ElementName=KindsListBox, Path=SelectedValue}" VerticalAlignment="Center" />
                        <Button Margin="8 0" Command="{Binding CopyToClipboardCommand, Mode=OneTime}" CommandParameter="{Binding ElementName=KindsListBox, Path=SelectedValue}">
                            <StackPanel Orientation="Horizontal">
                                <materialDesign:PackIcon Kind="ContentCopy"/>
                                <TextBlock Text="Copy To Clipboard"/>
                            </StackPanel>
                        </Button>
                    </StackPanel>
                </materialDesign:ColorZone>
            </Grid>
        </TabItem>
        <TabItem Header="Plate">
            <Grid>
        <Grid.Resources>
            <Style TargetType="TextBlock">
                <Setter Property="FontSize" Value="14" />
                <Setter Property="FontWeight" Value="DemiBold" />
                <Setter Property="Margin" Value="4" />
            </Style>
        </Grid.Resources>
        <Grid.RowDefinitions>
            <RowDefinition Height="1*" />
            <RowDefinition Height="1*" />
            <RowDefinition Height="1*" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="1*" />
            <ColumnDefinition Width="1*" />
            <ColumnDefinition Width="1*" />
        </Grid.ColumnDefinitions>
        <Border Background="{DynamicResource PrimaryHueMidBrush}" Grid.ColumnSpan="3">
            <TextBlock Foreground="{DynamicResource PrimaryHueMidForegroundBrush}">Primary - Mid</TextBlock>
        </Border>
        <Border Background="{DynamicResource PrimaryHueLightBrush}"
                Grid.Row="1">
            <TextBlock FontWeight="Bold" Foreground="{DynamicResource PrimaryHueLightForegroundBrush}">Light</TextBlock>
        </Border>
        <Border Background="{DynamicResource PrimaryHueMidBrush}"
                Grid.Row="1" Grid.Column="1">
            <TextBlock Foreground="{DynamicResource PrimaryHueMidForegroundBrush}">Mid</TextBlock>
        </Border>
        <Border Background="{DynamicResource PrimaryHueDarkBrush}"
                Grid.Row="1" Grid.Column="2">
            <TextBlock Foreground="{DynamicResource PrimaryHueDarkForegroundBrush}">Dark</TextBlock>
        </Border>
        <Border Background="{DynamicResource SecondaryAccentBrush}"
                Grid.Row="2" Grid.ColumnSpan="3">
            <TextBlock Foreground="{DynamicResource SecondaryAccentForegroundBrush}">Accent</TextBlock>
        </Border>
    </Grid>
        </TabItem>
        <TabItem Header="ProcessBar">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <!-- linear progress bars (the default style -->
                <ProgressBar Orientation="Vertical" Value="25" Margin="24" Grid.RowSpan="2" />
                <ProgressBar Orientation="Vertical" IsIndeterminate="True" Grid.Column="1" Grid.Row="0" Grid.RowSpan="2" Margin="24" />
                <StackPanel Grid.Row="0" Grid.Column="2" HorizontalAlignment="Stretch">
                    <ProgressBar Value="25" Margin="24" />
                    <ProgressBar Value="50" Margin="24" materialDesign:TransitionAssist.DisableTransitions="True" />
                    <!-- should disable on 2nd transition... -->
                    <ProgressBar Value="75" Margin="24" />
                    <ProgressBar IsIndeterminate="True" Margin="24" />
                </StackPanel>

                <!-- circular progress bars.. specify the MaterialDesignCicularProgressBar resource -->
                <Grid VerticalAlignment="Top" Grid.Column="2" Grid.Row="1">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>

                    <TextBlock Grid.ColumnSpan="2" FontSize="16" TextWrapping="Wrap" TextAlignment="Center" HorizontalAlignment="Stretch"
                       Margin="0 0 0 16">
                No extra control is required for the circular style, it is purely a standard ProgressBar, with the MaterialDesignCircularProgressBar style applied.
                    </TextBlock>

                    <ProgressBar Style="{StaticResource MaterialDesignCircularProgressBar}" 
                     x:Name="DeterminateCircularProgress"
                     Grid.Row="1" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="12 12 12 12" />
                    <TextBlock Grid.Row="1" Grid.Column="1" VerticalAlignment="Center" TextWrapping="Wrap">Standard deterministic progress bar, running from 0 to 100%. &#160;For the purpose of the demo, a storyboard is used to animate the .Value property.</TextBlock>

                    <ProgressBar Style="{StaticResource MaterialDesignCircularProgressBar}"                     
                     Value="35"
                     IsIndeterminate="True"
                     Grid.Row="2" Grid.Column="0" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="12 12 12 12"/>
                    <TextBlock Grid.Column="1" Grid.Row="2" VerticalAlignment="Center" TextWrapping="Wrap">Indeterminate progress bar, at 35%.</TextBlock>

                    <ProgressBar Style="{StaticResource MaterialDesignCircularProgressBar}"                     
                     Value="0"
                     IsIndeterminate="True"
                     Grid.Row="3" Grid.Column="0" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="12 12 12 12"/>
                    <TextBlock Grid.Column="1" Grid.Row="3" VerticalAlignment="Center" TextWrapping="Wrap">Fully indeterminate progress bar, using .Value=0 to inform the theme.</TextBlock>

                    <ProgressBar Style="{StaticResource MaterialDesignCircularProgressBar}"                     
                     Value="20"
                     IsIndeterminate="True"
                     x:Name="IndeterminateToDeterminateCircularProgress"
                     Grid.Row="4" Grid.Column="0" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="12 12 12 12" />
                    <TextBlock Grid.Column="1" Grid.Row="4" VerticalAlignment="Center" TextWrapping="Wrap">An indeterminate job transitioning to a determinate job, completing to 100%. &#160;For the purpose of the demo, a storyboard is used to animate the .Value and .IsIndeterminate properties.</TextBlock>

                    <materialDesign:Card UniformCornerRadius="14" Padding="4"
                      Grid.Row="5" Grid.Column="0"
                      VerticalAlignment="Center" HorizontalAlignment="Center" Margin="12 12 12 12">
                        <ProgressBar Style="{StaticResource MaterialDesignCircularProgressBar}" 
                         Value="50"
                         IsIndeterminate="True"                         
                      />
                    </materialDesign:Card>
                    <TextBlock Grid.Row="5" Grid.Column="1" VerticalAlignment="Center" TextWrapping="Wrap">Wrap in a Card control to raise the material.</TextBlock>

                    <materialDesign:Card UniformCornerRadius="14" 
                      RenderTransformOrigin=".5,.5"
                      Padding="4" 
                      Grid.Row="6" Grid.Column="0"
                      VerticalAlignment="Center" HorizontalAlignment="Center" Margin="12 12 12 12">
                        <ProgressBar Style="{StaticResource MaterialDesignCircularProgressBar}"                          
                             x:Name="AnimatedProgressInCard"
                      />
                        <materialDesign:Card.RenderTransform>
                            <TransformGroup>
                                <ScaleTransform x:Name="ScaleTransform" ScaleX="0" ScaleY="0" />
                            </TransformGroup>
                        </materialDesign:Card.RenderTransform>
                        <materialDesign:Card.Style>
                            <Style TargetType="materialDesign:Card" BasedOn="{StaticResource {x:Type materialDesign:Card}}">
                                <Style.Resources>
                                    <Storyboard x:Key="FadeIn" FillBehavior="HoldEnd">
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
                                            <EasingDoubleKeyFrame Value="0" />
                                            <EasingDoubleKeyFrame Value="1" KeyTime="0:0:0.8">
                                                <EasingDoubleKeyFrame.EasingFunction>
                                                    <CircleEase EasingMode="EaseOut" />
                                                </EasingDoubleKeyFrame.EasingFunction>
                                            </EasingDoubleKeyFrame>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
                                            <EasingDoubleKeyFrame Value="0" />
                                            <EasingDoubleKeyFrame Value="1" KeyTime="0:0:0.8">
                                                <EasingDoubleKeyFrame.EasingFunction>
                                                    <CircleEase EasingMode="EaseOut" />
                                                </EasingDoubleKeyFrame.EasingFunction>
                                            </EasingDoubleKeyFrame>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                    <Storyboard x:Key="FadeOut">
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
                                            <EasingDoubleKeyFrame Value="1" />
                                            <EasingDoubleKeyFrame Value="0" KeyTime="0:0:0.8">
                                                <EasingDoubleKeyFrame.EasingFunction>
                                                    <CircleEase EasingMode="EaseOut" />
                                                </EasingDoubleKeyFrame.EasingFunction>
                                            </EasingDoubleKeyFrame>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
                                            <EasingDoubleKeyFrame Value="1" />
                                            <EasingDoubleKeyFrame Value="0" KeyTime="0:0:0.8">
                                                <EasingDoubleKeyFrame.EasingFunction>
                                                    <CircleEase EasingMode="EaseOut" />
                                                </EasingDoubleKeyFrame.EasingFunction>
                                            </EasingDoubleKeyFrame>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </Style.Resources>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ElementName=AnimatedProgressInCard, Path=Value}" Value="20">
                                        <DataTrigger.EnterActions>
                                            <RemoveStoryboard BeginStoryboardName="FadeOut" />
                                            <BeginStoryboard Storyboard="{StaticResource FadeIn}" Name="FadeIn" />
                                        </DataTrigger.EnterActions>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding ElementName=AnimatedProgressInCard, Path=Value}" Value="100">
                                        <DataTrigger.EnterActions>
                                            <RemoveStoryboard BeginStoryboardName="FadeIn" />
                                            <BeginStoryboard Storyboard="{StaticResource FadeOut}" Name="FadeOut" />
                                        </DataTrigger.EnterActions>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </materialDesign:Card.Style>

                    </materialDesign:Card>
                    <TextBlock Grid.Row="6" Grid.Column="1" VerticalAlignment="Center" TextWrapping="Wrap">Apply some animations to the card to get funky!</TextBlock>

                </Grid>
            </Grid>
        </TabItem>
        
        <TabItem Header="Slider">
            <Grid VerticalAlignment="Top">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Slider Grid.Row="0" TickFrequency="5" Orientation="Horizontal" Minimum="1" Maximum="50" Value="25" />
                <StackPanel Orientation="Horizontal" Grid.Row="0" Grid.Column="1" Grid.RowSpan="3"
                    Margin="0 36 0 0">
                    <Slider TickFrequency="5" TickPlacement="BottomRight" Orientation="Vertical" Minimum="1" Maximum="50" />
                    <Slider TickFrequency="25" TickPlacement="TopLeft" Orientation="Vertical" Minimum="1" Maximum="50" IsEnabled="False" Margin="24 8 0 8" />
                </StackPanel>
                <Slider Grid.Row="1" TickFrequency="5" Orientation="Horizontal" TickPlacement="BottomRight" Minimum="1" Maximum="50" Value="25" IsSelectionRangeEnabled="True"
                Margin="0 36 0 0" />
                <Slider Grid.Row="2" TickFrequency="5" Orientation="Horizontal" TickPlacement="BottomRight" Minimum="1" Maximum="50" Value="25" IsEnabled="False"
                Margin="0 36 0 0" />

                <StackPanel Orientation="Horizontal" Grid.Row="3" Margin="0 16 0 0">
                    <TextBlock VerticalAlignment="Bottom">Try me</TextBlock>
                    <Slider Minimum="0" Maximum="100" Style="{StaticResource MaterialDesignDiscreteSlider}" 
                    ToolTip="MaterialDesignDiscreteSlider"
                    Value="50"
                    Width="280" 
                    Margin="8 0 0 0"/>
                </StackPanel>
                <Slider Minimum="0" Maximum="10" Margin="0 24 0 0" Style="{StaticResource MaterialDesignDiscreteSlider}" Grid.Row="4" Width="260" HorizontalAlignment="Left" />
                <Slider Minimum="0" Maximum="10" Margin="0 24 0 0" Style="{StaticResource MaterialDesignDiscreteSlider}" Grid.Row="5" Width="260" HorizontalAlignment="Left" />

            </Grid>
        </TabItem>
        <TabItem Header="Snackbars">
            <ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Hidden">
                <Grid Margin="0 0 0 4">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="340" />
                        <ColumnDefinition Width="340" />
                        <ColumnDefinition Width="340" />
                        <ColumnDefinition Width="340" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition />
                        <RowDefinition />
                    </Grid.RowDefinitions>

                    <!-- example 1 -->
                    <Border Background="{DynamicResource MaterialDesignSelection}" 
                    Padding="8 0 8 0">
                        <Grid>
                            <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
                                <TextBlock TextWrapping="WrapWithOverflow" Style="{DynamicResource MaterialDesignSubheadingTextBlock}">Example 1.</TextBlock>
                                <TextBlock TextWrapping="WrapWithOverflow" >Simple definition within XAML. Use the toggle to display the message.</TextBlock>
                                <ToggleButton IsChecked="{Binding ElementName=SnackbarOne, Path=IsActive, Mode=TwoWay}"
                                      Margin="0 8 0 0"/>
                            </StackPanel>


                            <!-- simplest form -->
                            <materialDesign:Snackbar Message="hello 1" 
                                             IsActive="False"
                                             x:Name="SnackbarOne" />
                        </Grid>
                    </Border>

                    <!-- example 2 -->
                    <Border Background="{DynamicResource MaterialDesignPaper}" 
                    Padding="8 0 8 0"
                    Grid.Column="1">
                        <Grid>
                            <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
                                <TextBlock TextWrapping="WrapWithOverflow" Style="{DynamicResource MaterialDesignSubheadingTextBlock}">Example 2.</TextBlock>
                                <TextBlock TextWrapping="WrapWithOverflow" >View source to see message defined in long hand, allowing action button content to be set.</TextBlock>
                                <ToggleButton IsChecked="{Binding ElementName=SnackbarTwo, Path=IsActive, Mode=TwoWay}"
                                      Margin="0 8 0 0" />
                            </StackPanel>

                            <!-- long hand form for setting the message -->
                            <materialDesign:Snackbar IsActive="False"
                                              x:Name="SnackbarTwo" >
                                <materialDesign:SnackbarMessage Content="Hello 2" ActionContent="UNDO" />
                            </materialDesign:Snackbar>
                        </Grid>
                    </Border>

                    <!-- example 3 -->
                    <!--
                    * using a message queue to manage queuing of messages, and getting onto correct thread
                    * notice the shorthand syntax {materialDesign:MessageQueue} for creating a new message 
                    queue without expanded XAML. useful in code-behind scenarios if you dont want to bind 
                    a message queue in to the snackbar.
                -->
                    <Border Background="{DynamicResource MaterialDesignSelection}" 
                    Padding="8 0 8 0"                
                    Grid.Column="2">
                        <Grid>
                            <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
                                <TextBlock TextWrapping="WrapWithOverflow" Style="{DynamicResource MaterialDesignSubheadingTextBlock}">Example 3.</TextBlock>
                                <TextBlock TextWrapping="WrapWithOverflow">In many real world scenario, notification display must deal with threading, queuing, and potentially heavy usage. A MessageQueue can be set to handle much of this for you, gicing the following benefits:</TextBlock>
                                <TextBlock TextWrapping="WrapWithOverflow" Margin="0 8 0 0" Text=" • Messages can be queued from any thread"/>
                                <TextBlock TextWrapping="WrapWithOverflow" Text=" • Message will auto hide after a time out period"/>
                                <TextBlock TextWrapping="WrapWithOverflow" Text=" • Notification will not time out if mouse is over it"/>
                                <TextBlock TextWrapping="WrapWithOverflow" Text=" • Can be paired with a DialogHost so timeout will pause if a active dialog"/>
                                <TextBlock TextWrapping="WrapWithOverflow" Text=" • Duplicate within a short period will be discarded"/>
                                <TextBlock TextWrapping="WrapWithOverflow" Text=" • A single message queue can be shared acros multiple Windows"/>
                                <TextBlock TextWrapping="WrapWithOverflow" Text=" • Works with code-behind and MVVM"/>
                                <Grid Margin="0 16 0 0">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>
                                    <TextBox x:Name="MessageTextBox" VerticalAlignment="Top"
                                     Grid.Column="0">Hello World</TextBox>
                                    <Button Click="SnackBar3_OnClick" Margin="16 0 0 0"
                                    Grid.Column="1">Send</Button>
                                </Grid>


                            </StackPanel>
                            <materialDesign:Snackbar MessageQueue="{materialDesign:MessageQueue}"
                                             x:Name="SnackbarThree" />
                        </Grid>
                    </Border>

                    <!-- example 4 -->
                    <!-- illustrates queueing uses some action command call backs -->
                    <Border Background="{DynamicResource MaterialDesignPaper}" 
                    Padding="8 0 8 0"                
                    Grid.Column="3">
                        <Grid>
                            <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
                                <TextBlock TextWrapping="WrapWithOverflow" Style="{DynamicResource MaterialDesignSubheadingTextBlock}">Example 4.</TextBlock>
                                <TextBlock TextWrapping="WrapWithOverflow">Illustrates queueing (including discarding of duplicates), and handling of commands. Action a notification to see a System.Trace response..</TextBlock>
                                <Grid Margin="0 16 0 0">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>
                                    <TextBox AcceptsReturn="True" x:Name="ExampleFourTextBox" TextWrapping="Wrap"
                                 Text="Message One&#x0d;&#x0a;Message Two&#x0d;&#x0a;Message Three&#x0d;&#x0a;Duplicate&#x0d;&#x0a;Duplicate&#x0d;&#x0a;Duplicate&#x0d;&#x0a;Start Fresh&#x0d;&#x0a;Goodbye" />
                                    <Button Click="SnackBar4_OnClick" HorizontalAlignment="Center" Grid.Column="1">Send</Button>
                                </Grid>
                            </StackPanel>
                            <materialDesign:Snackbar MessageQueue="{materialDesign:MessageQueue}"
                                              x:Name="SnackbarFour" />
                        </Grid>
                    </Border>

                    <!-- example 5 -->
                    <!-- full width snack bar -->
                    <Border Background="{DynamicResource MaterialDesignChipBackground}" 
                    Grid.ColumnSpan="2"
                    Grid.Row="1">
                        <StackPanel VerticalAlignment="Bottom">
                            <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center"
                                Margin="0 0 0 32">
                                <TextBlock TextWrapping="WrapWithOverflow" Style="{DynamicResource MaterialDesignSubheadingTextBlock}">Example 5.</TextBlock>
                                <TextBlock TextWrapping="WrapWithOverflow">Illustrates a full width Snackbar.</TextBlock>
                                <ToggleButton IsChecked="{Binding ElementName=SnackbarFive, Path=IsActive, Mode=TwoWay}"
                                      Margin="0 8 0 0" />
                            </StackPanel>
                            <materialDesign:Snackbar HorizontalAlignment="Stretch"
                                             x:Name="SnackbarFive">
                                <materialDesign:SnackbarMessage Content="This Snackbar is stretched horizontally. Consider allowing your content to push up."                                                    
                                                        ActionContent="OK" />
                            </materialDesign:Snackbar>
                        </StackPanel>
                    </Border>

                    <!-- example 6 -->
                    <!-- colour variations -->
                    <Border Grid.Column="2" Grid.Row="1">
                        <Border.Resources>
                            <ResourceDictionary>
                                <ResourceDictionary.MergedDictionaries>
                                    <!-- here is where you can get additional snackbar button styles from -->
                                    <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Snackbar.xaml" />
                                </ResourceDictionary.MergedDictionaries>
                            </ResourceDictionary>
                        </Border.Resources>
                        <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
                            <TextBlock TextWrapping="WrapWithOverflow" Style="{StaticResource MaterialDesignSubheadingTextBlock}">Example 6.</TextBlock>
                            <TextBlock TextWrapping="WrapWithOverflow">Action button colour variations.</TextBlock>
                            <materialDesign:Snackbar Margin="0 8 0 0" IsActive="True">
                                <materialDesign:SnackbarMessage Content="Default - accent"                                                    
                                                        ActionContent="ACCENT" />
                            </materialDesign:Snackbar>
                            <materialDesign:Snackbar Margin="0 8 0 0"
                                             IsActive="True"
                                             ActionButtonStyle="{StaticResource MaterialDesignSnackbarActionLightButton}">
                                <materialDesign:SnackbarMessage Content="Primary Light"                                                    
                                                        ActionContent="LIGHT" />
                            </materialDesign:Snackbar>
                            <materialDesign:Snackbar Margin="0 8 0 0"
                                             IsActive="True"
                                             ActionButtonStyle="{StaticResource MaterialDesignSnackbarActionMidButton}">
                                <materialDesign:SnackbarMessage Content="Primary Mid"                                                    
                                                        ActionContent="MID" />
                            </materialDesign:Snackbar>
                            <materialDesign:Snackbar Margin="0 8 0 0"
                                             IsActive="True"
                                             ActionButtonStyle="{StaticResource MaterialDesignSnackbarActionDarkButton}">
                                <materialDesign:SnackbarMessage Content="Primary Dark"                                                    
                                                        ActionContent="DARK" />
                            </materialDesign:Snackbar>
                        </StackPanel>
                    </Border>
                </Grid>
            </ScrollViewer>
        </TabItem>
        <TabItem Header="Tree">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <TreeView Grid.Column="0"
                  MinWidth="220">
                    <TreeViewItem Header="Fruit">
                        <TreeViewItem>
                            <TreeViewItem.Header>
                                <StackPanel Orientation="Horizontal">
                                    <Viewbox Width="16" Height="16">
                                        <Canvas Width="24" Height="24">
                                            <Path Data="M20,10C22,13 17,22 15,22C13,22 13,21 12,21C11,21 11,22 9,22C7,22 2,13 4,10C6,7 9,7 11,8V5C5.38,8.07 4.11,3.78 4.11,3.78C4.11,3.78 6.77,0.19 11,5V3H13V8C15,7 18,7 20,10Z" 
                                          Fill="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TreeViewItem}}, Path=Foreground}" />
                                        </Canvas>
                                    </Viewbox>
                                    <TextBlock Margin="8 0 0 0">Apple</TextBlock>
                                </StackPanel>
                            </TreeViewItem.Header>
                        </TreeViewItem>
                        <TreeViewItem Header="Banana"/>
                        <TreeViewItem Header="Grape">
                            <TextBlock><Run Text="Grapes for us"/></TextBlock>
                        </TreeViewItem>
                        <TreeViewItem Header="Peach"/>
                        <TreeViewItem Header="Pear"/>
                        <TreeViewItem Header="Strawberry"/>
                    </TreeViewItem>
                    <TreeViewItem Header="OS" IsExpanded="True">
                        <TreeViewItem Header="Amiga"/>
                        <TreeViewItem>
                            <TreeViewItem.Header>
                                <StackPanel Orientation="Horizontal">
                                    <Viewbox Width="16" Height="16">
                                        <Canvas Width="24" Height="24">
                                            <Path Data="M15,5H14V4H15M10,5H9V4H10M15.53,2.16L16.84,0.85C17.03,0.66 17.03,0.34 16.84,0.14C16.64,-0.05 16.32,-0.05 16.13,0.14L14.65,1.62C13.85,1.23 12.95,1 12,1C11.04,1 10.14,1.23 9.34,1.63L7.85,0.14C7.66,-0.05 7.34,-0.05 7.15,0.14C6.95,0.34 6.95,0.66 7.15,0.85L8.46,2.16C6.97,3.26 6,5 6,7H18C18,5 17,3.25 15.53,2.16M20.5,8A1.5,1.5 0 0,0 19,9.5V16.5A1.5,1.5 0 0,0 20.5,18A1.5,1.5 0 0,0 22,16.5V9.5A1.5,1.5 0 0,0 20.5,8M3.5,8A1.5,1.5 0 0,0 2,9.5V16.5A1.5,1.5 0 0,0 3.5,18A1.5,1.5 0 0,0 5,16.5V9.5A1.5,1.5 0 0,0 3.5,8M6,18A1,1 0 0,0 7,19H8V22.5A1.5,1.5 0 0,0 9.5,24A1.5,1.5 0 0,0 11,22.5V19H13V22.5A1.5,1.5 0 0,0 14.5,24A1.5,1.5 0 0,0 16,22.5V19H17A1,1 0 0,0 18,18V8H6V18Z" 
                                          Fill="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TreeViewItem}}, Path=Foreground}" />
                                        </Canvas>
                                    </Viewbox>
                                    <TextBlock Margin="8 0 0 0">Android</TextBlock>
                                </StackPanel>
                            </TreeViewItem.Header>
                        </TreeViewItem>
                        <TreeViewItem Header="iOS"/>
                        <TreeViewItem>
                            <TreeViewItem.Header>
                                <StackPanel Orientation="Horizontal">
                                    <Viewbox Width="16" Height="16">
                                        <Canvas Width="24" Height="24">
                                            <Path Data="M13.18,14.5C12.53,15.26 11.47,15.26 10.82,14.5L7.44,10.5C7.16,11.28 7,12.12 7,13C7,14.67 7.57,16.18 8.5,17.27C10,17.37 11.29,17.96 11.78,19C11.85,19 11.93,19 12.22,19C12.71,18 13.95,17.44 15.46,17.33C16.41,16.24 17,14.7 17,13C17,12.12 16.84,11.28 16.56,10.5L13.18,14.5M20,20.75C20,21.3 19.3,22 18.75,22H13.25C12.7,22 12,21.3 12,20.75C12,21.3 11.3,22 10.75,22H5.25C4.7,22 4,21.3 4,20.75C4,19.45 4.94,18.31 6.3,17.65C5.5,16.34 5,14.73 5,13C4,15 2.7,15.56 2.09,15C1.5,14.44 1.79,12.83 3.1,11.41C3.84,10.6 5,9.62 5.81,9.25C6.13,8.56 6.54,7.93 7,7.38V7A5,5 0 0,1 12,2A5,5 0 0,1 17,7V7.38C17.46,7.93 17.87,8.56 18.19,9.25C19,9.62 20.16,10.6 20.9,11.41C22.21,12.83 22.5,14.44 21.91,15C21.3,15.56 20,15 19,13C19,14.75 18.5,16.37 17.67,17.69C19.05,18.33 20,19.44 20,20.75M9.88,9C9.46,9.5 9.46,10.27 9.88,10.75L11.13,12.25C11.54,12.73 12.21,12.73 12.63,12.25L13.88,10.75C14.29,10.27 14.29,9.5 13.88,9H9.88M10,5.25C9.45,5.25 9,5.9 9,7C9,8.1 9.45,8.75 10,8.75C10.55,8.75 11,8.1 11,7C11,5.9 10.55,5.25 10,5.25M14,5.25C13.45,5.25 13,5.9 13,7C13,8.1 13.45,8.75 14,8.75C14.55,8.75 15,8.1 15,7C15,5.9 14.55,5.25 14,5.25Z" 
                                          Fill="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TreeViewItem}}, Path=Foreground}" />
                                        </Canvas>
                                    </Viewbox>
                                    <TextBlock Margin="8 0 0 0">Linux</TextBlock>
                                </StackPanel>
                            </TreeViewItem.Header>
                        </TreeViewItem>
                        <TreeViewItem>
                            <TreeViewItem.Header>
                                <StackPanel Orientation="Horizontal">
                                    <Viewbox Width="16" Height="16">
                                        <Canvas Width="24" Height="24">
                                            <Path Data="M3,12V6.75L9,5.43V11.91L3,12M20,3V11.75L10,11.9V5.21L20,3M3,13L9,13.09V19.9L3,18.75V13M20,13.25V22L10,20.09V13.1L20,13.25Z" 
                                          Fill="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TreeViewItem}}, Path=Foreground}" />
                                        </Canvas>
                                    </Viewbox>
                                    <TextBlock Margin="8 0 0 0">Windows</TextBlock>
                                </StackPanel>
                            </TreeViewItem.Header>
                        </TreeViewItem>
                    </TreeViewItem>
                    <TreeViewItem Header="Empty" />
                </TreeView>
                <Grid Grid.Column="1"
              MinWidth="220"
              VerticalAlignment="Top">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <TreeView Grid.Row="0"
                      ItemsSource="{Binding MovieCategories}"
                      MinWidth="220"
                      >
                        <!--<TreeView.Resources>
                    <HierarchicalDataTemplate DataType="{x:Type domain:MovieCategory}"
                                              ItemsSource="{Binding Movies}">
                        <TextBlock Text="{Binding Name}" Margin="3 2"/>
                    </HierarchicalDataTemplate>
                    <DataTemplate DataType="{x:Type domain:Movie}">
                        <TextBlock Text="{Binding Name}" Margin="3 2"
                                   ToolTip="{Binding Director}"/>
                    </DataTemplate>
                </TreeView.Resources>-->
                    </TreeView>
                    <materialDesign:PopupBox Grid.Row="1"
                                     Style="{StaticResource MaterialDesignMultiFloatingActionPopupBox}"
                                     PlacementMode="LeftAndAlignMiddles"
                                     UnfurlOrientation="Horizontal"
                                     ToolTip="Manage items"
                                     Margin="0 0 10 10"
                                     HorizontalAlignment="Right" VerticalAlignment="Bottom">
                        <StackPanel Orientation="Horizontal">
                            <Button ToolTip="Add an item"
                            Command="{Binding AddCommand}">
                                <Path Data="M19,13H13V19H11V13H5V11H11V5H13V11H19V13Z"
                              Stretch="Uniform"
                              Width="15" Height="15"
                              Fill="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=Foreground}"/>
                            </Button>
                            <Button ToolTip="Remove selected item"
                            Command="{Binding RemoveSelectedItemCommand}">
                                <Path Data="M19,4H15.5L14.5,3H9.5L8.5,4H5V6H19M6,19A2,2 0 0,0 8,21H16A2,2 0 0,0 18,19V7H6V19Z"
                              Stretch="Uniform"
                              Width="15" Height="15"
                              Fill="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=Foreground}"/>
                            </Button>
                        </StackPanel>
                    </materialDesign:PopupBox>
                </Grid>
            </Grid>
        </TabItem>
        <TabItem Header="Typography">
            <ScrollViewer HorizontalScrollBarVisibility="Auto"
                  VerticalScrollBarVisibility="Disabled">
                <Grid Margin="32">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="64" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="64" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <TextBlock Grid.Row="0" Grid.Column="0" Margin="0 26 0 0" Style="{StaticResource Caption}">Display 4  - MaterialDesignDisplay4TextBlock</TextBlock>
                    <TextBlock Grid.Row="0" Grid.Column="2" Style="{StaticResource MaterialDesignDisplay4TextBlock}" Margin="0 4 0 4">Light 112sp</TextBlock>
                    <TextBlock Grid.Row="0" Grid.Column="4" Style="{StaticResource MaterialDesignDisplay4TextBlock}" Margin="0 4 0 4"><Hyperlink IsEnabled="False">Light 112sp (Disabled)</Hyperlink></TextBlock>

                    <TextBlock Grid.Row="1" Grid.Column="0" Margin="0 12 0 0" Style="{StaticResource Caption}">Display 3 - MaterialDesignDisplay3TextBlock</TextBlock>
                    <TextBlock Grid.Row="1" Grid.Column="2" Style="{StaticResource MaterialDesignDisplay3TextBlock}" Margin="0 4 0 4">Regular 56sp</TextBlock>
                    <!-- hyperlinks will pick up owner text block style... -->
                    <TextBlock Grid.Row="1" Grid.Column="4" Style="{StaticResource MaterialDesignDisplay3TextBlock}" Margin="0 4 0 4"><Hyperlink>Regular 56sp</Hyperlink></TextBlock>

                    <TextBlock Grid.Row="2" Grid.Column="0" Margin="0 8 0 0" Style="{StaticResource Caption}">Display 2 - MaterialDesignDisplay2TextBlock</TextBlock>
                    <TextBlock Grid.Row="2" Grid.Column="2" Style="{StaticResource MaterialDesignDisplay2TextBlock}" Margin="0 4 0 4">Regular 45sp</TextBlock>
                    <!-- ...or hyperlink style can be ste manually -->
                    <TextBlock Grid.Row="2" Grid.Column="4" Margin="0 4 0 4"><Hyperlink Style="{StaticResource MaterialDesignDisplay2Hyperlink}">Regular 45sp</Hyperlink></TextBlock>

                    <TextBlock Grid.Row="3" Grid.Column="0" Margin="0 8 0 0" Style="{StaticResource Caption}">Display 1 - MaterialDesignDisplay1TextBlock</TextBlock>
                    <TextBlock Grid.Row="3" Grid.Column="2" Style="{StaticResource MaterialDesignDisplay1TextBlock}" Margin="0 4 0 4">Regular 34sp</TextBlock>
                    <TextBlock Grid.Row="3" Grid.Column="4" Margin="0 4 0 4"><Hyperlink Style="{StaticResource MaterialDesignDisplay1Hyperlink}">Regular 34sp</Hyperlink></TextBlock>

                    <TextBlock Grid.Row="4" Grid.Column="0" Margin="0 8 0 0" Style="{StaticResource Caption}">Headline - MaterialDesignHeadlineTextBlock</TextBlock>
                    <TextBlock Grid.Row="4" Grid.Column="2" Style="{StaticResource MaterialDesignHeadlineTextBlock}" Margin="0 4 0 6">Regular 24sp</TextBlock>
                    <TextBlock Grid.Row="4" Grid.Column="4" Margin="0 4 0 4"><Hyperlink IsEnabled="False" Style="{StaticResource MaterialDesignHeadlineHyperlink}">Regular 24sp (Disabled)</Hyperlink></TextBlock>

                    <TextBlock Grid.Row="5" Grid.Column="0" Margin="0 8 0 0" Style="{StaticResource Caption}">Title - MaterialDesignTitleTextBlock</TextBlock>
                    <TextBlock Grid.Row="5" Grid.Column="2" Style="{StaticResource MaterialDesignTitleTextBlock}" Margin="0 6 0 8">Medium 20sp</TextBlock>
                    <TextBlock Grid.Row="5" Grid.Column="4" Margin="0 4 0 4"><Hyperlink Style="{StaticResource MaterialDesignTitleHyperlink}">Medium 20sp</Hyperlink></TextBlock>

                    <TextBlock Grid.Row="6" Grid.Column="0" VerticalAlignment="Center" Style="{StaticResource Caption}">Subheading - MaterialDesignSubheadingTextBlock</TextBlock>
                    <TextBlock Grid.Row="6" Grid.Column="2" Style="{StaticResource MaterialDesignSubheadingTextBlock}" Margin="0 8 0 8">Regular 15sp</TextBlock>
                    <TextBlock Grid.Row="6" Grid.Column="4" Margin="0 4 0 4"><Hyperlink Style="{StaticResource MaterialDesignSubheadingHyperlink}">Regular 15sp</Hyperlink></TextBlock>

                    <TextBlock Grid.Row="7" Grid.Column="0" VerticalAlignment="Center" Style="{StaticResource Caption}">Body 2 - MaterialDesignBody2TextBlock</TextBlock>
                    <TextBlock Grid.Row="7" Grid.Column="2" Style="{StaticResource MaterialDesignBody2TextBlock}" Margin="0 8 0 8">Medium 13sp</TextBlock>
                    <TextBlock Grid.Row="7" Grid.Column="4" Margin="0 4 0 4"><Hyperlink Style="{StaticResource MaterialDesignBody2Hyperlink}">Medium 13sp</Hyperlink></TextBlock>

                    <TextBlock Grid.Row="8" Grid.Column="0" VerticalAlignment="Center" Style="{StaticResource Caption}">Body 1 - MaterialDesignBody1TextBlock</TextBlock>
                    <TextBlock Grid.Row="8" Grid.Column="2" Style="{StaticResource MaterialDesignBody1TextBlock}" Margin="0 8 0 8">Regular 13sp</TextBlock>
                    <TextBlock Grid.Row="8" Grid.Column="4" Margin="0 4 0 4"><Hyperlink IsEnabled="False" Style="{StaticResource MaterialDesignBody1Hyperlink}">Regular 13sp (Disabled)</Hyperlink></TextBlock>

                    <TextBlock Grid.Row="9" Grid.Column="0" VerticalAlignment="Center" Style="{StaticResource Caption}">Caption - MaterialDesignCaptionTextBlock</TextBlock>
                    <TextBlock Grid.Row="9" Grid.Column="2" Style="{StaticResource MaterialDesignCaptionTextBlock}" Margin="0 8 0 8">Regular 12sp</TextBlock>
                    <TextBlock Grid.Row="9" Grid.Column="4" Margin="0 4 0 4"><Hyperlink Style="{StaticResource MaterialDesignCaptionHyperlink}">Regular 12sp</Hyperlink></TextBlock>

                    <TextBlock Grid.Row="10" Grid.Column="0" VerticalAlignment="Center" Style="{StaticResource Caption}">Button - MaterialDesignButtonTextBlock</TextBlock>
                    <TextBlock Grid.Row="10" Grid.Column="2" Style="{StaticResource MaterialDesignButtonTextBlock}" Margin="0 8 0 8">MEDIUM (ALL CAPS) 14sp</TextBlock>

                </Grid>
            </ScrollViewer>
        </TabItem>
        <TabItem Header="Other">
            <StackPanel>
                <materialDesign:Card Padding="32" Margin="16">
                    <TextBlock Style="{DynamicResource MaterialDesignTitleTextBlock}">My First Material Design App</TextBlock>
                </materialDesign:Card>

                <DatePicker Opacity="1" Width="100" Margin="0 16 0 0" materialDesign:HintAssist.Hint="Pick Date" Style="{StaticResource MaterialDesignFloatingHintDatePicker}" />
                <materialDesign:TimePicker  Opacity="1" Text="12:2" Grid.Row="1" Grid.Column="2"  Is24Hours="True" SelectedTimeFormat="Long"   x:Name="PresetTimePicker" VerticalAlignment="Top"  Width="100" Margin="0 16 0 0" />

            </StackPanel>

        </TabItem>
    </TabControl>
   
</Window>
